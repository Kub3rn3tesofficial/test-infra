periodics:
- name: ci-k8sio-groups
  interval: 6h
  cluster: k8s-infra-prow-build-trusted
  decorate: true
  max_concurrency: 1
  annotations:
    testgrid-dashboards: wg-k8s-infra-k8sio
    testgrid-alert-email: k8s-infra-alerts@kubernetes.io
    testgrid-num-failures-to-alert: '1'
  extra_refs:
  - org: kubernetes
    repo: k8s.io
    base_ref: main
  spec:
    serviceAccountName: gsuite-groups-manager
    containers:
    - image: gcr.io/k8s-staging-infra-tools/k8s-infra:latest
      command:
      - make
      args:
      - -C
      - groups
      - run
      - --
      - --confirm
- name: ci-k8sio-audit
  interval: 3h
  cluster: k8s-infra-prow-build-trusted
  decorate: true
  max_concurrency: 1
  extra_refs:
  - org: kubernetes
    repo: k8s.io
    base_ref: main
  annotations:
    testgrid-dashboards: wg-k8s-infra-k8sio
    testgrid-alert-email: k8s-infra-alerts@kubernetes.io
    testgrid-num-failures-to-alert: '1'
  rerun_auth_config:
    github_team_slugs:
    - org: kubernetes
      slug: wg-k8s-infra-leads
    - org: kubernetes
      slug: k8s-infra-gcp-auditors
  spec:
    serviceAccountName: k8s-infra-gcp-auditor
    containers:
    - image: gcr.io/k8s-staging-infra-tools/k8s-infra:latest
      imagePullPolicy: Always
      command:
      - ./audit/create-or-update-audit-pr.sh
      volumeMounts:
      - name: github
        mountPath: /etc/github-token
        readOnly: true
    volumes:
    - name: github
      secret:
        secretName: cncf-ci-github-token

#  Periodic CI job for running snyk scans against k/k master
# - It installs snyk CLI and requires 'snyk_token' secret available
#   in test infra with key name 'SNYK_TOKEN'. This secret is used to
#   populate env var 'SNYK_TOKEN', required for snyk CLI auth.
# - Licenses and few false positive deps (eg version '0.0.0') are
#   filtered from the snyk scan results and printed on stdout as well
#   as "${ARTIFACTS}/snyk_results.json"
- name: ci-kubernetes-snyk-master
  interval: 3h
  cluster: k8s-infra-prow-build-trusted
  decorate: true
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: golang
      envFrom:
      - secretRef:
          # secret key should be defined as SNYK_TOKEN
          name: snyk-token
      command:
      - /bin/bash
      args:
      - -c
      - |
        set -euo pipefail; \
        apt update && apt -y install jq; \
        wget -q -O /usr/local/bin/snyk https://github.com/snyk/snyk/releases/download/v1.605.0/snyk-linux && chmod +x /usr/local/bin/snyk; \
        mkdir -p "${ARTIFACTS}"; \
        [[ -z "${SNYK_TOKEN}" ]] && echo "SNYK_TOKEN env var is not set, required for snyk scan" && exit 1; \
        echo $PWD; \
        echo $SNYK_TOKEN; \
        snyk test --json-file-output=${ARTIFACTS}/result_all.json || [[ $? -gt 1 ]] && echo "failed to run snyk scan" && exit 1; \
        cat ${ARTIFACTS}/result_all.json | jq '.vulnerabilities | .[] | select ((.type=="license") or (.version=="0.0.0") | not)' | tee "${ARTIFACTS}/snyk_results.json"
  annotations:
    testgrid-create-test-group: "true"
    testgrid-dashboards: sig-security-snyk-scan
    description: Run snyk scan on k/k master periodically

postsubmits:
  kubernetes/k8s.io:
  - name: post-k8sio-groups
    cluster: k8s-infra-prow-build-trusted
    decorate: true
    max_concurrency: 1
    run_if_changed: '^groups/'
    branches:
    - ^main$
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: wg-k8s-infra-k8sio
      testgrid-alert-email: k8s-infra-alerts@kubernetes.io
      testgrid-num-failures-to-alert: '1'
    rerun_auth_config:
      github_team_slugs:
      - org: kubernetes
        slug: wg-k8s-infra-leads
      - org: kubernetes
        slug: k8s-infra-group-admins
    spec:
      serviceAccountName: gsuite-groups-manager
      containers:
      - image: gcr.io/k8s-staging-infra-tools/k8s-infra:latest
        command:
        - make
        args:
        - -C
        - groups
        - run
        - --
        - --confirm
  - name: post-k8sio-dns-update
    cluster: k8s-infra-prow-build-trusted
    decorate: true
    max_concurrency: 1
    run_if_changed: "^dns/zone-configs/"
    branches:
    - ^main$
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: wg-k8s-infra-k8sio
      testgrid-alert-email: k8s-infra-alerts@kubernetes.io
      testgrid-num-failures-to-alert: '1'
    rerun_auth_config:
      github_team_slugs:
      - org: kubernetes
        slug: wg-k8s-infra-leads
    spec:
      serviceAccountName: k8s-infra-dns-updater
      containers:
      - image: us.gcr.io/k8s-artifacts-prod/infra-tools/octodns:v20200616-67ce585
        command:
        - bash
        args:
        - -c
        - "cd dns && make push-local"
  - name: post-k8sio-deploy-prow-build-resources
    cluster: k8s-infra-prow-build-trusted
    decorate: true
    max_concurrency: 1
    run_if_changed: "^infra/gcp/clusters/projects/k8s-infra-prow-build/"
    branches:
    - ^main$
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: wg-k8s-infra-k8sio
      testgrid-alert-email: k8s-infra-alerts@kubernetes.io
      testgrid-num-failures-to-alert: '1'
    rerun_auth_config:
      github_team_slugs:
      - org: kubernetes
        slug: wg-k8s-infra-leads
      - org: kubernetes
        slug: test-infra-admins
    spec:
      serviceAccountName: prow-deployer
      containers:
      - image: gcr.io/k8s-staging-infra-tools/k8s-infra:latest
        command:
        - ./infra/gcp/clusters/projects/k8s-infra-prow-build/deploy.sh
  - name: post-k8sio-deploy-prow-build-trusted-resources
    cluster: k8s-infra-prow-build-trusted
    decorate: true
    max_concurrency: 1
    run_if_changed: "^infra/gcp/clusters/projects/k8s-infra-prow-build-trusted/"
    branches:
    - ^main$
    annotations:
      testgrid-create-test-group: 'true'
      testgrid-dashboards: wg-k8s-infra-k8sio
      testgrid-alert-email: k8s-infra-alerts@kubernetes.io
      testgrid-num-failures-to-alert: '1'
    rerun_auth_config:
      github_team_slugs:
      - org: kubernetes
        slug: wg-k8s-infra-leads
      - org: kubernetes
        slug: test-infra-admins
    spec:
      serviceAccountName: prow-deployer
      containers:
      - image: gcr.io/k8s-staging-infra-tools/k8s-infra:latest
        command:
        - ./infra/gcp/clusters/projects/k8s-infra-prow-build-trusted/deploy.sh
