periodics:
#  Periodic CI job for running snyk scans against k/k master
# - It installs snyk CLI and requires 'snyk-token' secret available
#   in test infra with key name 'SNYK_TOKEN'. This secret is used to
#   populate env var 'SNYK_TOKEN', required for snyk CLI auth.
# - Licenses and few false positive deps (eg version '0.0.0') are
#   filtered from the snyk scan results.
- name: ci-kubernetes-snyk-master
  interval: 6h
  cluster: k8s-infra-prow-build-trusted
  decorate: true
  extra_refs:
  - org: kubernetes
    repo: kubernetes
    base_ref: master
    path_alias: k8s.io/kubernetes
  spec:
    containers:
    - image: golang
      envFrom:
      - secretRef:
          # secret key should be defined as SNYK_TOKEN
          name: snyk-token
      command:
      - /bin/bash
      args:
      - -c
      - |
        set -euo pipefail
        apt update && apt -y install jq
        wget -q -O /usr/local/bin/snyk https://github.com/snyk/snyk/releases/download/v1.605.0/snyk-linux && chmod +x /usr/local/bin/snyk
        mkdir -p "${ARTIFACTS}"
        if [ -z "${SNYK_TOKEN}" ]; then
          echo "SNYK_TOKEN env var is not set, required for snyk scan"
          exit 1
        fi
        echo "Running snyk scan .."
        EXIT_CODE=0
        RESULT_UNFILTERED=$(snyk test --json) || EXIT_CODE=$?
        if [ $EXIT_CODE -gt 1 ]; then
          echo "Failed to run snyk scan with exit code $EXIT_CODE . Error message: $RESULT_UNFILTERED"
          exit 1
        fi
        RESULT=$(echo $RESULT_UNFILTERED | jq \
        '{vulnerabilities: .vulnerabilities | map(select((.type != "license") and (.version !=  "0.0.0"))) | select(length > 0) }')
        if [[ ${RESULT} ]]; then
          echo "Vulnerability filtering failed"
          exit 1
        else
          echo "Scan completed"
        fi

        # snyk scan on container images
        echo "Fetch the list of k8s images"
        curl -L https://sbom.k8s.io/v1.22.1/release | grep 'PackageName: k8s.gcr.io/' | awk '{print $2}' > images
        while read image; do
          echo "Running snyk scan .."
          EXIT_CODE=0
          RESULT_UNFILTERED=$(snyk container test $image --json) || EXIT_CODE=$?
          if [ $EXIT_CODE -gt 1 ]; then
            echo "Failed to run snyk scan with exit code $EXIT_CODE . Error message: $RESULT_UNFILTERED"
            exit 1
          fi
          RESULT=$(echo $RESULT_UNFILTERED | jq \
          '{vulnerabilities: .vulnerabilities | select(length > 0) }')
          if [[ ${RESULT} ]]; then
            echo "Vulnerability filtering failed"
            #exit 1
          else
            echo "Scan completed"
          fi
        done < images
  annotations:
    testgrid-create-test-group: "true"
    testgrid-alert-email: kubernetes-security-tooling-private@googlegroups.com
    testgrid-num-failures-to-alert: '1'
    testgrid-dashboards: sig-security-snyk-scan
    description: Run snyk scan on k/k master periodically
