periodics:
# Runs e2e on the cluster built with latest released kops and latest released k/k
- interval: 1h
  labels:
    preset-k8s-ssh: "true"
  name: e2e-kops-gce-stable
  decorate: true
  decoration_config:
    timeout: 140m
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-gce-stable.k8s.local
      - --deployment=kops
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/latest.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/latest
      - --ginkgo-parallel
      # The logic in https://github.com/kubernetes/test-infra/pull/19031 and https://github.com/kubernetes/test-infra/pull/18870
      # Creates a state store bucket in the project, let's use the GCP default service account for the nodes
      # until we have a dedicated node account.
      # - --kops-args=--gce-service-account=pr-kubekins@kubernetes-jenkins-pull.iam.gserviceaccount.com
      - --kops-feature-flags=GoogleCloudBucketACL
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --kops-zones=us-central1-c
      - --provider=gce
      - --timeout=140m
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Firewall|Dashboard|Services.*functioning.*NodePort
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210108-3c85f1a-master
  annotations:
    testgrid-dashboards: sig-cluster-lifecycle-kops, google-kops-gce, kops-gce
    testgrid-days-of-results: "30"
    testgrid-tab-name: kops-gce-stable

# Runs e2e on the cluster built with latest released kops and k/k master branch
- interval: 1h
  labels:
    preset-k8s-ssh: "true"
  name: e2e-kops-gce-latest
  decorate: true
  decoration_config:
    timeout: 140m
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-gce-latest.k8s.local
      - --deployment=kops
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release-dev/ci/latest.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=ci/latest
      - --ginkgo-parallel
      # Temporarily use default service account: https://github.com/kubernetes/test-infra/issues/17558
      #- --kops-args=--gce-service-account=pr-kubekins@kubernetes-jenkins-pull.iam.gserviceaccount.com
      - --kops-feature-flags=GoogleCloudBucketACL
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --kops-zones=us-central1-c
      - --provider=gce
      - --timeout=140m
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Firewall|Dashboard|Services.*functioning.*NodePort
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-experimental
      imagePullPolicy: Always
  annotations:
    testgrid-dashboards: sig-cluster-lifecycle-kops, google-kops-gce, kops-gce
    testgrid-days-of-results: "30"
    testgrid-tab-name: kops-gce-latest

# Semi-experimental periodics to help get GCE up to snuff!
- interval: 1h
  labels:
    preset-k8s-ssh: "true"
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
    preset-dind-enabled: "true"
  name: e2e-kops-gce_scopes-kubetest
  decorate: true
  decoration_config:
    timeout: 60m
  spec:
    serviceAccountName: k8s-kops-test
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:latest-experimental
      imagePullPolicy: Always
      command:
      - runner.sh
      args:
      - make
      - test-e2e-gce_scopes
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"
  annotations:
    testgrid-dashboards: sig-cluster-lifecycle-kops, google-kops-gce, kops-gce
    testgrid-tab-name: e2e-kubetest2-gce_scopes
