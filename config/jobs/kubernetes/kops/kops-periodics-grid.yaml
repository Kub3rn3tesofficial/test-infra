# Test scenarios generated by build_grid.py (do not manually edit)
# 593 jobs, total of 1073 runs per week
periodics:

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-amzn2-k17-docker
  cron: '19 9 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-amzn2-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": null}
- name: e2e-kops-grid-amzn2-k17-ko18-docker
  cron: '41 2 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-amzn2-k17-ko18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-amzn2, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-amzn2-k17-ko19-docker
  cron: '51 20 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-amzn2-k17-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-amzn2-k18-docker
  cron: '23 5 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-amzn2-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": null}
- name: e2e-kops-grid-amzn2-k18-ko18-docker
  cron: '48 7 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-amzn2-k18-ko18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-amzn2, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-amzn2-k18-ko19-docker
  cron: '38 1 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-amzn2-k18-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-amzn2-k19-docker
  cron: '37 3 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-amzn2-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-amzn2-k19-ko19-docker
  cron: '3 20 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-amzn2-k19-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-amzn2-k20-docker
  cron: '35 5 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-amzn2-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-deb9-k17-docker
  cron: '44 18 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-deb9-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb9-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": null}
- name: e2e-kops-grid-deb9-k17-ko18-docker
  cron: '39 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-deb9-k17-ko18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-deb9, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb9-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-deb9-k17-ko19-docker
  cron: '41 8 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-deb9-k17-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb9-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-deb9-k18-docker
  cron: '52 14 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-deb9-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb9-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": null}
- name: e2e-kops-grid-deb9-k18-ko18-docker
  cron: '10 11 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-deb9-k18-ko18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-deb9, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb9-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-deb9-k18-ko19-docker
  cron: '20 21 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-deb9-k18-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb9-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-deb9-k19-docker
  cron: '54 8 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-deb9-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb9-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-deb9-k19-ko19-docker
  cron: '49 16 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-deb9-k19-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb9-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-deb9-k20-docker
  cron: '0 6 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-deb9-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb9-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-deb10-k17-docker
  cron: '27 17 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-deb10-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": null}
- name: e2e-kops-grid-deb10-k17-ko18-docker
  cron: '18 5 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-deb10-k17-ko18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-deb10, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-deb10-k17-ko19-docker
  cron: '0 3 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-deb10-k17-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-deb10-k18-docker
  cron: '39 13 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-deb10-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": null}
- name: e2e-kops-grid-deb10-k18-ko18-docker
  cron: '55 0 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-deb10-k18-ko18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-deb10, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-deb10-k18-ko19-docker
  cron: '53 14 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-deb10-k18-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-deb10-k19-docker
  cron: '45 11 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-deb10-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-deb10-k19-ko19-docker
  cron: '32 19 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-deb10-k19-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-deb10-k20-docker
  cron: '19 13 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-deb10-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-flatcar-k17-docker
  cron: '43 21 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flatcar-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": null}
- name: e2e-kops-grid-flatcar-k17-ko18-docker
  cron: '38 10 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flatcar-k17-ko18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-flatcar, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-flatcar-k17-ko19-docker
  cron: '12 20 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flatcar-k17-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-flatcar-k18-docker
  cron: '43 1 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flatcar-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": null}
- name: e2e-kops-grid-flatcar-k18-ko18-docker
  cron: '43 23 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flatcar-k18-ko18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-flatcar, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-flatcar-k18-ko19-docker
  cron: '1 9 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flatcar-k18-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-flatcar-k19-docker
  cron: '57 7 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flatcar-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-flatcar-k19-ko19-docker
  cron: '16 12 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flatcar-k19-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-flatcar-k20-docker
  cron: '15 9 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flatcar-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-rhel7-k17-docker
  cron: '5 7 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-rhel7-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel7-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": null}
- name: e2e-kops-grid-rhel7-k17-ko18-docker
  cron: '34 17 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-rhel7-k17-ko18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-rhel7, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel7-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-rhel7-k17-ko19-docker
  cron: '48 23 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-rhel7-k17-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel7-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-rhel7-k18-docker
  cron: '5 11 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-rhel7-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel7-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": null}
- name: e2e-kops-grid-rhel7-k18-ko18-docker
  cron: '51 12 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-rhel7-k18-ko18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-rhel7, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel7-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-rhel7-k18-ko19-docker
  cron: '49 2 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-rhel7-k18-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel7-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-rhel7-k19-docker
  cron: '3 21 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-rhel7-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel7-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-rhel7-k19-ko19-docker
  cron: '28 23 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-rhel7-k19-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel7-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-rhel7-k20-docker
  cron: '13 3 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-rhel7-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel7-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-rhel8-k17-docker
  cron: '40 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-rhel8-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": null}
- name: e2e-kops-grid-rhel8-k17-ko18-docker
  cron: '55 4 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-rhel8-k17-ko18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-rhel8, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-rhel8-k17-ko19-docker
  cron: '25 18 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-rhel8-k17-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-rhel8-k18-docker
  cron: '32 2 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-rhel8-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": null}
- name: e2e-kops-grid-rhel8-k18-ko18-docker
  cron: '54 9 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-rhel8-k18-ko18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-rhel8, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-rhel8-k18-ko19-docker
  cron: '32 23 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-rhel8-k18-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-rhel8-k19-docker
  cron: '26 20 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-rhel8-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-rhel8-k19-ko19-docker
  cron: '1 2 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-rhel8-k19-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-rhel8-k20-docker
  cron: '48 10 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-rhel8-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-u1804-k17-docker
  cron: '9 3 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-u1804-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u1804-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": null}
- name: e2e-kops-grid-u1804-k17-ko18-docker
  cron: '26 13 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-u1804-k17-ko18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u1804, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u1804-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-u1804-k17-ko19-docker
  cron: '8 11 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-u1804-k17-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u1804-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-u1804-k18-docker
  cron: '25 15 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-u1804-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u1804-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": null}
- name: e2e-kops-grid-u1804-k18-ko18-docker
  cron: '51 16 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-u1804-k18-ko18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u1804, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u1804-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-u1804-k18-ko19-docker
  cron: '41 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-u1804-k18-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u1804-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-u1804-k19-docker
  cron: '23 9 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-u1804-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u1804-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-u1804-k19-ko19-docker
  cron: '28 19 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-u1804-k19-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u1804-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-u1804-k20-docker
  cron: '49 15 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-u1804-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u1804-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-u2004-k17-docker
  cron: '54 12 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-u2004-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": null}
- name: e2e-kops-grid-u2004-k17-ko18-docker
  cron: '9 18 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-u2004-k17-ko18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u2004, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-u2004-k17-ko19-docker
  cron: '51 20 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-u2004-k17-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-u2004-k18-docker
  cron: '46 0 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-u2004-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": null}
- name: e2e-kops-grid-u2004-k18-ko18-docker
  cron: '0 23 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-u2004-k18-ko18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u2004, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-u2004-k18-ko19-docker
  cron: '22 1 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-u2004-k18-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-u2004-k19-docker
  cron: '36 6 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-u2004-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-u2004-k19-ko19-docker
  cron: '35 20 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-u2004-k19-ko19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-u2004-k20-docker
  cron: '10 0 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-u2004-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kubenet --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k17-docker
  cron: '21 17 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-amzn2-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k17-ko18-docker
  cron: '31 0 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-amzn--e6a59e105f.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-amzn2, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k17-ko19-docker
  cron: '45 6 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-amzn--d589bdb3b9.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k18-docker
  cron: '13 21 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-amzn2-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k18-ko18-docker
  cron: '6 13 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-amzn--ddf53fe1c0.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-amzn2, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k18-ko19-docker
  cron: '40 19 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-amzn--d79a7b309e.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k19-docker
  cron: '19 3 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-amzn2-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k19-ko19-docker
  cron: '9 22 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-amzn--4a13cd1506.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k20-docker
  cron: '29 5 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-amzn2-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb9-k17-docker
  cron: '57 6 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-deb9-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb9-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "calico"}
- name: e2e-kops-grid-calico-deb9-k17-ko18-docker
  cron: '31 3 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-deb9--644672a609.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-deb9, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb9-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-deb9-k17-ko19-docker
  cron: '9 5 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-deb9--7f83ec1eb7.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb9-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb9-k18-docker
  cron: '33 2 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-deb9-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb9-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "calico"}
- name: e2e-kops-grid-calico-deb9-k18-ko18-docker
  cron: '58 22 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-deb9--68f646f5d3.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-deb9, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb9-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-deb9-k18-ko19-docker
  cron: '0 0 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-deb9--0a0bf7e728.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb9-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb9-k19-docker
  cron: '7 4 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-deb9-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb9-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-deb9-k19-ko19-docker
  cron: '25 5 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-deb9--6a06454fc7.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb9-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb9-k20-docker
  cron: '9 2 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-deb9-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb9-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k17-docker
  cron: '1 9 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-deb10-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k17-ko18-docker
  cron: '28 15 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-deb1--8403d1402d.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-deb10, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k17-ko19-docker
  cron: '34 9 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-deb1--17583b9037.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k18-docker
  cron: '53 21 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-deb10-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k18-ko18-docker
  cron: '5 2 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-deb1--8d807a9264.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-deb10, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k18-ko19-docker
  cron: '55 12 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-deb1--f4d662fd7e.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k19-docker
  cron: '27 11 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-deb10-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k19-ko19-docker
  cron: '34 17 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-deb1--e6ec304abc.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k20-docker
  cron: '57 21 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-deb10-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k17-docker
  cron: '21 19 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-flat--b8b8ed7f6f.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k17-ko18-docker
  cron: '40 16 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-flat--c122e607ac.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-flatcar, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k17-ko19-docker
  cron: '50 6 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-flat--935feace68.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k18-docker
  cron: '49 23 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-flat--360e443b51.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k18-ko18-docker
  cron: '13 21 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-flat--58780a85dc.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-flatcar, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k18-ko19-docker
  cron: '51 11 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-flat--27693eae47.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k19-docker
  cron: '15 9 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-flat--eff87ca2be.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k19-ko19-docker
  cron: '42 22 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-flat--6e32c22ec1.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k20-docker
  cron: '29 15 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-flat--b4fcf12951.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel7-k17-docker
  cron: '23 23 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-rhel7-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel7-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel7-k17-ko18-docker
  cron: '20 19 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-rhel--86b4319d19.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-rhel7, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel7-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel7-k17-ko19-docker
  cron: '54 13 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-rhel--134d57ff2a.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel7-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel7-k18-docker
  cron: '23 19 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-rhel7-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel7-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel7-k18-ko18-docker
  cron: '57 6 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-rhel--4d064d4de6.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-rhel7, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel7-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel7-k18-ko19-docker
  cron: '47 8 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-rhel--e5096a35ae.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel7-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel7-k19-docker
  cron: '45 5 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-rhel7-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel7-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel7-k19-ko19-docker
  cron: '30 13 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-rhel--85833ea075.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel7-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel7-k20-docker
  cron: '59 11 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-rhel7-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel7-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k17-docker
  cron: '50 6 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-rhel8-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k17-ko18-docker
  cron: '21 14 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-rhel--4977ff5e99.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-rhel8, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k17-ko19-docker
  cron: '59 16 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-rhel--d4df41db1e.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k18-docker
  cron: '54 2 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-rhel8-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k18-ko18-docker
  cron: '12 19 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-rhel--03ebbee263.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-rhel8, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k18-ko19-docker
  cron: '42 5 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-rhel--d8188e3cbc.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k19-docker
  cron: '20 12 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-rhel8-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k19-ko19-docker
  cron: '19 0 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-rhel--da601a468a.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k20-docker
  cron: '18 2 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-rhel8-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u1804-k17-docker
  cron: '23 3 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-u1804-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u1804-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "calico"}
- name: e2e-kops-grid-calico-u1804-k17-ko18-docker
  cron: '12 15 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-u180--0224607198.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u1804, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u1804-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-u1804-k17-ko19-docker
  cron: '38 1 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-u180--5227c996ae.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u1804-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u1804-k18-docker
  cron: '7 7 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-u1804-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u1804-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "calico"}
- name: e2e-kops-grid-calico-u1804-k18-ko18-docker
  cron: '45 2 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-u180--0c6c6e663e.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u1804, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u1804-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-u1804-k18-ko19-docker
  cron: '3 20 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-u180--90868e01ec.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u1804-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u1804-k19-docker
  cron: '57 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-u1804-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u1804-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-u1804-k19-ko19-docker
  cron: '50 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-u180--864f54d243.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u1804-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u1804-k20-docker
  cron: '23 23 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-u1804-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u1804-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k17-docker
  cron: '8 20 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-u2004-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k17-ko18-docker
  cron: '31 0 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-u200--75fe7bfa44.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u2004, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k17-ko19-docker
  cron: '53 22 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-u200--047bf2993a.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k18-docker
  cron: '48 0 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-u2004-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k18-ko18-docker
  cron: '38 5 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-u200--6dd8c8253a.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u2004, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k18-ko19-docker
  cron: '20 3 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-u200--f6cce16c8e.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k19-docker
  cron: '14 6 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-u2004-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k19-ko19-docker
  cron: '21 22 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-u200--3756fb7f55.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k20-docker
  cron: '28 16 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-calico-u2004-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=calico --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb9-k17-ko18-docker
  cron: '17 9 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-deb9--6fd13e3b23.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-deb9, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb9-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k17-docker
  cron: '15 11 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-deb10-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k17-ko18-docker
  cron: '42 1 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-deb1--021e671328.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-deb10, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k17-ko19-docker
  cron: '28 7 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-deb1--1b772fdcad.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k18-docker
  cron: '11 23 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-deb10-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k18-ko18-docker
  cron: '31 4 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-deb1--d52b3f3dfb.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-deb10, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k18-ko19-docker
  cron: '45 10 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-deb1--d3a1a45f09.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k19-docker
  cron: '29 1 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-deb10-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k19-ko19-docker
  cron: '56 7 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-deb1--b60e2006d6.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k20-docker
  cron: '23 15 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-deb10-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k17-docker
  cron: '33 11 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-flat--0dcf03fe71.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k17-ko18-docker
  cron: '30 22 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-flat--41a7ad7b3a.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-flatcar, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k17-ko19-docker
  cron: '0 0 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-flat--2c3e53222b.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k18-docker
  cron: '57 7 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-flat--c6cbb83f18.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k18-ko18-docker
  cron: '11 11 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-flat--6811bcd730.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-flatcar, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k18-ko19-docker
  cron: '29 21 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-flat--76d5962443.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k19-docker
  cron: '59 17 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-flat--52fd052ad3.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k19-ko19-docker
  cron: '40 8 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-flat--f3c26444db.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k20-docker
  cron: '49 23 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-flat--763d9a8618.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k17-docker
  cron: '24 20 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-rhel8-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k17-ko18-docker
  cron: '59 0 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-rhel--eea74b7e5f.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-rhel8, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k17-ko19-docker
  cron: '37 22 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-rhel--64c115b451.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k18-docker
  cron: '32 16 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-rhel8-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k18-ko18-docker
  cron: '2 21 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-rhel--3e50ddea62.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-rhel8, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k18-ko19-docker
  cron: '16 11 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-rhel--be7c3f3b49.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k19-docker
  cron: '18 6 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-rhel8-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k19-ko19-docker
  cron: '5 14 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-rhel--1eb6a2a787.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k20-docker
  cron: '48 0 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-rhel8-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u1804-k17-docker
  cron: '57 17 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-u1804-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u1804-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u1804-k17-ko18-docker
  cron: '42 17 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-u180--5c1c2bb229.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u1804, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u1804-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u1804-k17-ko19-docker
  cron: '0 15 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-u180--75b5999326.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u1804-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u1804-k18-docker
  cron: '13 21 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-u1804-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u1804-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u1804-k18-ko18-docker
  cron: '19 4 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-u180--c691c6ea2a.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u1804, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u1804-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u1804-k18-ko19-docker
  cron: '13 18 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-u180--c626c0a3c0.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u1804-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u1804-k19-docker
  cron: '23 11 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-u1804-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u1804-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u1804-k19-ko19-docker
  cron: '52 23 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-u180--9fb7a8b1e7.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u1804-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u1804-k20-docker
  cron: '5 21 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-u1804-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u1804-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k17-docker
  cron: '42 6 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-u2004-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k17-ko18-docker
  cron: '9 6 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-u200--f8e8b72609.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u2004, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k17-ko19-docker
  cron: '15 0 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-u200--b2debcd255.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k18-docker
  cron: '26 10 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-u2004-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k18-ko18-docker
  cron: '56 3 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-u200--fa675a97bf.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u2004, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k18-ko19-docker
  cron: '38 13 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-u200--acb3b85a16.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k19-docker
  cron: '36 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-u2004-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k19-ko19-docker
  cron: '43 8 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-u200--038a3d53d8.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k20-docker
  cron: '2 10 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-cilium-u2004-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=cilium --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k17-docker
  cron: '56 15 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-amz--420e9ffef9.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k17-ko18-docker
  cron: '7 0 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-amz--80b7130040.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-amzn2, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k17-ko19-docker
  cron: '53 14 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-amz--8ce268d0d8.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k18-docker
  cron: '40 11 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-amz--9420ae4da2.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k18-ko18-docker
  cron: '26 5 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-amz--25cf8582bd.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-amzn2, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k18-ko19-docker
  cron: '0 3 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-amz--530c9f43f8.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k19-docker
  cron: '6 13 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-amz--48d6fb2c72.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k19-ko19-docker
  cron: '13 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-amz--675d467446.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k20-docker
  cron: '16 11 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-amz--7587772ad7.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb9-k17-docker
  cron: '51 19 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-deb9-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb9-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb9-k17-ko18-docker
  cron: '3 0 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-deb--30ed65e9dc.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-deb9, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb9-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb9-k17-ko19-docker
  cron: '49 6 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-deb--fc47a9a9ff.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb9-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb9-k18-docker
  cron: '23 23 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-deb9-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb9-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb9-k18-ko18-docker
  cron: '26 13 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-deb--0470533c2f.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-deb9, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb9-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb9-k18-ko19-docker
  cron: '48 11 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-deb--b39b0d1263.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb9-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb9-k19-docker
  cron: '57 9 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-deb9-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb9-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb9-k19-ko19-docker
  cron: '41 14 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-deb--58042ca28b.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb9-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb9-k20-docker
  cron: '43 7 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-deb9-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb9-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k17-docker
  cron: '36 15 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-deb--37513f012e.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k17-ko18-docker
  cron: '48 7 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-deb--3f01f0fb9f.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-deb10, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k17-ko19-docker
  cron: '54 17 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-deb--42151564e0.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k18-docker
  cron: '12 11 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-deb--3da74598c1.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k18-ko18-docker
  cron: '21 18 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-deb--4ae6a90392.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-deb10, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k18-ko19-docker
  cron: '35 4 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-deb--8005427161.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k19-docker
  cron: '14 5 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-deb--fd3b8899ca.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k19-ko19-docker
  cron: '34 9 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-deb--c1e9534a72.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k20-docker
  cron: '52 3 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-deb--2a040dde3f.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k17-docker
  cron: '43 10 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-fla--897b060441.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k17-ko18-docker
  cron: '43 7 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-fla--c5d9cbca2b.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-flatcar, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k17-ko19-docker
  cron: '1 9 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-fla--7068bbeda2.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k18-docker
  cron: '31 14 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-fla--e271453ef9.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k18-ko18-docker
  cron: '6 18 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-fla--a5222aa6e0.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-flatcar, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k18-ko19-docker
  cron: '4 12 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-fla--c86bf7f878.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k19-docker
  cron: '13 16 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-fla--5858bcddc6.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k19-ko19-docker
  cron: '29 9 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-fla--99cbae3503.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k20-docker
  cron: '39 22 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-fla--4d0479b6b7.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel7-k17-docker
  cron: '42 9 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-rhe--414c3f1b2b.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel7-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel7-k17-ko18-docker
  cron: '12 11 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-rhe--11d6f14d18.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-rhel7, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel7-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel7-k17-ko19-docker
  cron: '42 5 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-rhe--32d13b4524.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel7-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel7-k18-docker
  cron: '6 5 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-rhe--e583f7664f.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel7-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel7-k18-ko18-docker
  cron: '9 14 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-rhe--7f22496c00.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-rhel7, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel7-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel7-k18-ko19-docker
  cron: '31 8 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-rhe--1a876390d0.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel7-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel7-k19-docker
  cron: '16 11 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-rhe--fa1e74345a.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel7-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel7-k19-ko19-docker
  cron: '30 21 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-rhe--35bb0fbb97.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel7-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel7-k20-docker
  cron: '38 13 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-rhe--d70d43145d.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel7-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k17-docker
  cron: '43 16 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-rhe--eb3119f2c5.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k17-ko18-docker
  cron: '25 14 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-rhe--d32d2df897.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-rhel8, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k17-ko19-docker
  cron: '7 0 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-rhe--3022e1178f.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k18-docker
  cron: '7 12 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-rhe--c4e0fcfb2e.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k18-ko18-docker
  cron: '16 19 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-rhe--f2f59e9ee9.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-rhel8, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k18-ko19-docker
  cron: '14 13 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-rhe--444fca2476.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k19-docker
  cron: '9 18 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-rhe--c695116981.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k19-ko19-docker
  cron: '3 8 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-rhe--4fc41606d9.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k20-docker
  cron: '59 4 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-rhe--9249b61b63.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u1804-k17-docker
  cron: '22 5 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-u18--32ad29aeec.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u1804-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u1804-k17-ko18-docker
  cron: '56 7 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-u18--70f297e628.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u1804, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u1804-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u1804-k17-ko19-docker
  cron: '22 17 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-u18--6ad9ea38fc.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u1804-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u1804-k18-docker
  cron: '2 9 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-u18--81d631999a.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u1804-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u1804-k18-ko18-docker
  cron: '25 2 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-u18--a488bf8883.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u1804, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u1804-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u1804-k18-ko19-docker
  cron: '7 20 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-u18--ce218b9c91.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u1804-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u1804-k19-docker
  cron: '40 7 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-u18--d1e3ca1f2f.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u1804-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u1804-k19-ko19-docker
  cron: '10 1 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-u18--5151d9d7bc.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u1804-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u1804-k20-docker
  cron: '34 17 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-u18--d715e68c0d.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u1804-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k17-docker
  cron: '49 18 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-u20--511bc87c5b.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k17-ko18-docker
  cron: '47 0 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-u20--880b10f52a.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u2004, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k17-ko19-docker
  cron: '9 6 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-u20--1e6b900713.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k18-docker
  cron: '37 22 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-u20--8acc4c7d64.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k18-ko18-docker
  cron: '30 5 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-u20--9408176b04.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u2004, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k18-ko19-docker
  cron: '40 19 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-u20--f41b7446e4.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k19-docker
  cron: '39 0 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-u20--944ade9f2c.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k19-ko19-docker
  cron: '33 22 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-u20--2c068e0e92.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k20-docker
  cron: '1 14 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-flannel-u20--358d2b22f8.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=flannel --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k17-docker
  cron: '45 1 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-amzn2-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k17-ko18-docker
  cron: '49 18 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-amzn--eff93ec454.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-amzn2, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k17-ko19-docker
  cron: '19 12 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-amzn--63c9ff503f.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k18-docker
  cron: '45 5 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-amzn2-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k18-ko18-docker
  cron: '8 7 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-amzn--335be34bdc.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-amzn2, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k18-ko19-docker
  cron: '58 1 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-amzn--474ea278bc.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k19-docker
  cron: '31 19 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-amzn2-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k19-ko19-docker
  cron: '31 4 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-amzn--f3bd765a86.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "amzn2", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k20-docker
  cron: '41 21 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-amzn2-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb9-k17-docker
  cron: '59 0 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-deb9-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb9-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb9-k17-ko18-docker
  cron: '48 0 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-deb9--8f39e2e93e.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-deb9, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb9-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb9-k17-ko19-docker
  cron: '30 22 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-deb9--49bd934b7a.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb9-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb9-k18-docker
  cron: '23 4 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-deb9-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb9-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb9-k18-ko18-docker
  cron: '41 5 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-deb9--65224fa5b6.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-deb9, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb9-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb9-k18-ko19-docker
  cron: '55 11 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-deb9--2fa6d0711d.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb9-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb9-k19-docker
  cron: '5 10 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-deb9-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb9-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb9-k19-ko19-docker
  cron: '10 6 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-deb9--9e2a78e2ce.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb9-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb9", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb9-k20-docker
  cron: '39 20 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-deb9-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb9-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k17-docker
  cron: '9 17 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-deb10-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k17-ko18-docker
  cron: '2 5 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-deb1--a17b51dde8.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-deb10, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k17-ko19-docker
  cron: '40 3 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-deb1--4a51c36c33.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k18-docker
  cron: '1 21 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-deb10-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k18-ko18-docker
  cron: '19 16 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-deb1--b70a7e1d75.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-deb10, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k18-ko19-docker
  cron: '41 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-deb1--3a6dbfbc73.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k19-docker
  cron: '55 3 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-deb10-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k19-ko19-docker
  cron: '28 11 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-deb1--9339c15371.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "deb10", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k20-docker
  cron: '57 5 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-deb10-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=admin
      - --env=KUBE_SSH_USER=admin
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=136693071363/debian-10-amd64-20201207-477
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-flatcar-k17-docker
  cron: '58 16 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-flat--ededc82e6b.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-flatcar-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-flatcar-k17-ko18-docker
  cron: '10 18 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-flat--2c4ffd37a6.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-flatcar, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-flatcar-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-flatcar-k17-ko19-docker
  cron: '48 20 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-flat--c5cfd61856.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-flatcar-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-flatcar-k18-docker
  cron: '6 20 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-flat--bb7d53b2a9.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-flatcar-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-flatcar-k18-ko18-docker
  cron: '51 7 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-flat--02f194f5b1.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-flatcar, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-flatcar-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-flatcar-k18-ko19-docker
  cron: '41 1 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-flat--514c14aa43.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-flatcar-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-flatcar-k19-docker
  cron: '28 2 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-flat--db989caf1f.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-flatcar-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-flatcar-k19-ko19-docker
  cron: '12 4 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-flat--e80b18d14d.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-flatcar-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "flatcar", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-flatcar-k20-docker
  cron: '38 4 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-flat--87685f834e.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=core
      - --env=KUBE_SSH_USER=core
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=075585003325/Flatcar-stable-2605.12.0-hvm
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-flatcar-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel7-k17-docker
  cron: '19 23 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-rhel7-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel7-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel7-k17-ko18-docker
  cron: '22 9 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-rhel--2a060e8e0b.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-rhel7, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel7-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel7-k17-ko19-docker
  cron: '28 7 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-rhel--c19fbfbae1.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel7-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel7-k18-docker
  cron: '15 3 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-rhel7-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel7-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel7-k18-ko18-docker
  cron: '47 12 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-rhel--8309a447b2.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-rhel7, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel7-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel7-k18-ko19-docker
  cron: '9 18 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-rhel--28841e4628.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel7-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel7-k19-docker
  cron: '45 5 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-rhel7-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel7-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel7-k19-ko19-docker
  cron: '0 23 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-rhel--b61e16ce68.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel7-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel7", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel7-k20-docker
  cron: '23 3 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-rhel7-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel7-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k17-docker
  cron: '6 6 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-rhel8-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k17-ko18-docker
  cron: '23 20 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-rhel--97db836b11.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-rhel8, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k17-ko19-docker
  cron: '25 2 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-rhel--a2323b3164.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k18-docker
  cron: '18 2 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-rhel8-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k18-ko18-docker
  cron: '54 1 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-rhel--c2a0a4bcb1.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-rhel8, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k18-ko19-docker
  cron: '48 15 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-rhel--06de614454.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k19-docker
  cron: '28 12 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-rhel8-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k19-ko19-docker
  cron: '41 10 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-rhel--2375c90ab9.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "rhel8", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k20-docker
  cron: '26 2 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-rhel8-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ec2-user
      - --env=KUBE_SSH_USER=ec2-user
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u1804-k17-docker
  cron: '51 19 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-u1804-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u1804-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u1804-k17-ko18-docker
  cron: '18 5 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-u180--7b1664b3a1.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u1804, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u1804-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u1804-k17-ko19-docker
  cron: '28 3 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-u180--8babdee6c0.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u1804-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u1804-k18-docker
  cron: '31 7 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-u1804-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u1804-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u1804-k18-ko18-docker
  cron: '39 8 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-u180--82fa66b867.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u1804, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u1804-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u1804-k18-ko19-docker
  cron: '41 14 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-u180--40a765e153.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u1804-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u1804-k19-docker
  cron: '33 1 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-u1804-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u1804-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u1804-k19-ko19-docker
  cron: '20 19 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-u180--51ce0b3713.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u1804-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u1804", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u1804-k20-docker
  cron: '55 15 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-u1804-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u1804-k20-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k17-docker
  cron: '8 20 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-u2004-k17-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.17, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k17-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.18", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k17-ko18-docker
  cron: '25 18 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-u200--87dbbabd63.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u2004, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k17-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k17-ko19-docker
  cron: '11 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-u200--86a695efd1.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.17
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.17, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k17-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k18-docker
  cron: '12 16 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-u2004-k18-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.18, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.18", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k18-ko18-docker
  cron: '20 15 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-u200--d5621cc20d.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.18/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.18'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.18, kops-distro-u2004, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k18-ko18-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k18-ko19-docker
  cron: '26 1 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-u200--7d5903f6ae.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.18
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.18, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k18-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k19-docker
  cron: '22 22 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-u2004-k19-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.19, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k19-ko19-docker
  cron: '19 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-u200--eced335c5e.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.19
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.19, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k19-ko19-docker

# {"cloud": "aws", "container_runtime": "docker", "distro": "u2004", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k20-docker
  cron: '44 16 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  spec:
    containers:
    - command:
      - runner.sh
      - /workspace/scenarios/kubernetes_e2e.py
      args:
      - --cluster=e2e-kops-kopeio-u2004-k20-docker.test-cncf-aws.k8s.io
      - --deployment=kops
      - --kops-ssh-user=ubuntu
      - --env=KUBE_SSH_USER=ubuntu
      - --env=KOPS_DEPLOY_LATEST_URL=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt
      - --env=KOPS_KUBE_RELEASE_URL=https://storage.googleapis.com/kubernetes-release/release
      - --env=KOPS_RUN_TOO_NEW_VERSION=1
      - --extract=release/stable-1.20
      - --ginkgo-parallel=25
      - --kops-args=--channel=alpha --networking=kopeio --container-runtime=docker
      - --kops-image=099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1
      - --kops-priority-path=/workspace/kubernetes/platforms/linux/amd64
      - --kops-version=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt
      - --provider=aws
      - --test_args=--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds
      - --timeout=60m
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: "2"
          memory: 2Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: docker
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.20, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k20-docker

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-amzn2-k17-containerd
  cron: '30 23 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-amzn2-k17-ko19-containerd
  cron: '6 12 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-amzn2-k18-containerd
  cron: '27 22 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-amzn2-k18-ko19-containerd
  cron: '43 17 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-amzn2-k19-containerd
  cron: '48 17 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-amzn2-k19-ko19-containerd
  cron: '48 18 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-amzn2-k20-containerd
  cron: '39 14 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-amzn2-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-deb9-k17-containerd
  cron: '45 5 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb9-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-deb9-k17-ko19-containerd
  cron: '52 11 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb9-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-deb9-k18-containerd
  cron: '40 4 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb9-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-deb9-k18-ko19-containerd
  cron: '45 14 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb9-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-deb9-k19-containerd
  cron: '3 3 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb9-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-deb9-k19-ko19-containerd
  cron: '54 13 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb9-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-deb9-k20-containerd
  cron: '52 12 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb9-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-deb10-k17-containerd
  cron: '39 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-deb10-k17-ko19-containerd
  cron: '12 22 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-deb10-k18-containerd
  cron: '38 7 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-deb10-k18-ko19-containerd
  cron: '49 3 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-deb10-k19-containerd
  cron: '29 0 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-deb10-k19-ko19-containerd
  cron: '6 16 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-deb10-k20-containerd
  cron: '34 15 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-deb10-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-flatcar-k17-containerd
  cron: '31 20 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-flatcar-k17-ko19-containerd
  cron: '3 19 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-flatcar-k18-containerd
  cron: '14 5 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-flatcar-k18-ko19-containerd
  cron: '58 14 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-flatcar-k19-containerd
  cron: '1 10 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-flatcar-k19-ko19-containerd
  cron: '13 5 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-flatcar-k20-containerd
  cron: '2 21 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flatcar-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-rhel7-k17-containerd
  cron: '38 19 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel7-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-rhel7-k17-ko19-containerd
  cron: '30 8 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel7-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-rhel7-k18-containerd
  cron: '7 10 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel7-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-rhel7-k18-ko19-containerd
  cron: '43 21 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel7-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-rhel7-k19-containerd
  cron: '48 21 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel7-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-rhel7-k19-ko19-containerd
  cron: '28 14 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel7-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-rhel7-k20-containerd
  cron: '11 10 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel7-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-rhel8-k17-containerd
  cron: '12 1 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-rhel8-k17-ko19-containerd
  cron: '44 6 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-rhel8-k18-containerd
  cron: '25 0 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-rhel8-k18-ko19-containerd
  cron: '45 11 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-rhel8-k19-containerd
  cron: '22 15 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-rhel8-k19-ko19-containerd
  cron: '22 0 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-rhel8-k20-containerd
  cron: '13 0 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-rhel8-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-u1804-k17-containerd
  cron: '11 6 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u1804-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-u1804-k17-ko19-containerd
  cron: '39 9 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u1804-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-u1804-k18-containerd
  cron: '14 23 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u1804-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-u1804-k18-ko19-containerd
  cron: '22 12 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u1804-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-u1804-k19-containerd
  cron: '37 16 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u1804-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-u1804-k19-ko19-containerd
  cron: '57 15 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u1804-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-u1804-k20-containerd
  cron: '30 7 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u1804-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-u2004-k17-containerd
  cron: '14 19 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-u2004-k17-ko19-containerd
  cron: '29 23 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-u2004-k18-containerd
  cron: '23 10 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-u2004-k18-ko19-containerd
  cron: '8 2 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-u2004-k19-containerd
  cron: '24 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": null}
- name: e2e-kops-grid-u2004-k19-ko19-containerd
  cron: '3 9 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": null}
- name: e2e-kops-grid-u2004-k20-containerd
  cron: '55 18 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=kubenet --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: ''
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-u2004-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k17-containerd
  cron: '34 10 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k17-ko19-containerd
  cron: '19 9 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k18-containerd
  cron: '27 19 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k18-ko19-containerd
  cron: '26 12 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k19-containerd
  cron: '32 20 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k19-ko19-containerd
  cron: '53 23 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-amzn2-k20-containerd
  cron: '51 3 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-amzn2-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb9-k17-containerd
  cron: '41 8 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb9-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-deb9-k17-ko19-containerd
  cron: '2 14 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb9-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb9-k18-containerd
  cron: '16 17 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb9-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-deb9-k18-ko19-containerd
  cron: '7 11 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb9-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb9-k19-containerd
  cron: '35 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb9-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-deb9-k19-ko19-containerd
  cron: '8 0 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb9-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb9-k20-containerd
  cron: '44 9 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb9-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k17-containerd
  cron: '23 11 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k17-ko19-containerd
  cron: '1 3 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k18-containerd
  cron: '10 10 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k18-ko19-containerd
  cron: '56 14 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k19-containerd
  cron: '5 21 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k19-ko19-containerd
  cron: '35 21 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-deb10-k20-containerd
  cron: '6 10 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-deb10-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k17-containerd
  cron: '40 3 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k17-ko19-containerd
  cron: '48 1 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k18-containerd
  cron: '29 18 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k18-ko19-containerd
  cron: '37 12 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k19-containerd
  cron: '18 13 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k19-ko19-containerd
  cron: '22 15 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-flatcar-k20-containerd
  cron: '21 2 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-flatcar-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel7-k17-containerd
  cron: '30 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel7-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel7-k17-ko19-containerd
  cron: '27 21 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel7-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel7-k18-containerd
  cron: '11 23 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel7-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel7-k18-ko19-containerd
  cron: '50 0 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel7-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel7-k19-containerd
  cron: '4 16 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel7-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel7-k19-ko19-containerd
  cron: '37 3 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel7-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel7-k20-containerd
  cron: '59 23 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel7-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k17-containerd
  cron: '0 12 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k17-ko19-containerd
  cron: '29 19 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k18-containerd
  cron: '21 13 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k18-ko19-containerd
  cron: '24 22 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k19-containerd
  cron: '6 10 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k19-ko19-containerd
  cron: '51 5 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-rhel8-k20-containerd
  cron: '9 21 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-rhel8-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u1804-k17-containerd
  cron: '19 19 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u1804-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-u1804-k17-ko19-containerd
  cron: '38 12 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u1804-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u1804-k18-containerd
  cron: '18 18 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u1804-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-u1804-k18-ko19-containerd
  cron: '23 17 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u1804-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u1804-k19-containerd
  cron: '13 13 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u1804-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-u1804-k19-ko19-containerd
  cron: '56 18 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u1804-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u1804-k20-containerd
  cron: '18 18 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u1804-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k17-containerd
  cron: '50 22 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k17-ko19-containerd
  cron: '16 18 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k18-containerd
  cron: '15 7 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k18-ko19-containerd
  cron: '5 7 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k19-containerd
  cron: '12 16 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k19-ko19-containerd
  cron: '14 20 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "calico"}
- name: e2e-kops-grid-calico-u2004-k20-containerd
  cron: '39 23 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=calico --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: calico
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-calico-u2004-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k17-containerd
  cron: '1 17 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k17-ko19-containerd
  cron: '33 15 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k18-containerd
  cron: '12 0 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k18-ko19-containerd
  cron: '24 10 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k19-containerd
  cron: '19 23 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k19-ko19-containerd
  cron: '59 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-deb10-k20-containerd
  cron: '40 0 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-deb10-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k17-containerd
  cron: '23 4 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k17-ko19-containerd
  cron: '47 18 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k18-containerd
  cron: '50 21 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k18-ko19-containerd
  cron: '6 15 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k19-containerd
  cron: '49 2 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k19-ko19-containerd
  cron: '41 4 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-flatcar-k20-containerd
  cron: '10 21 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-flatcar-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k17-containerd
  cron: '54 6 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k17-ko19-containerd
  cron: '9 23 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k18-containerd
  cron: '35 7 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k18-ko19-containerd
  cron: '44 18 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k19-containerd
  cron: '24 0 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k19-ko19-containerd
  cron: '35 17 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-rhel8-k20-containerd
  cron: '7 7 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-rhel8-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u1804-k17-containerd
  cron: '41 9 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u1804-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u1804-k17-ko19-containerd
  cron: '50 8 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u1804-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u1804-k18-containerd
  cron: '24 16 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u1804-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u1804-k18-ko19-containerd
  cron: '47 5 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u1804-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u1804-k19-containerd
  cron: '39 15 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u1804-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u1804-k19-ko19-containerd
  cron: '52 6 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u1804-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u1804-k20-containerd
  cron: '0 16 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u1804-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k17-containerd
  cron: '52 12 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k17-ko19-containerd
  cron: '4 22 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k18-containerd
  cron: '57 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k18-ko19-containerd
  cron: '33 19 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k19-containerd
  cron: '46 18 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k19-ko19-containerd
  cron: '54 0 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "cilium"}
- name: e2e-kops-grid-cilium-u2004-k20-containerd
  cron: '33 13 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=cilium --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|TCP.CLOSE_WAIT|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: cilium
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-cilium-u2004-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k17-containerd
  cron: '2 1 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k17-ko19-containerd
  cron: '4 2 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k18-containerd
  cron: '59 8 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k18-ko19-containerd
  cron: '25 23 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k19-containerd
  cron: '44 23 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k19-ko19-containerd
  cron: '46 20 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-amzn2-k20-containerd
  cron: '35 8 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-amzn2-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb9-k17-containerd
  cron: '52 12 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb9-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb9-k17-ko19-containerd
  cron: '58 8 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb9-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb9-k18-containerd
  cron: '45 5 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb9-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb9-k18-ko19-containerd
  cron: '39 13 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb9-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb9-k19-containerd
  cron: '10 10 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb9-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb9-k19-ko19-containerd
  cron: '44 14 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb9-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb9-k20-containerd
  cron: '53 21 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb9-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k17-containerd
  cron: '11 16 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k17-ko19-containerd
  cron: '50 8 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k18-containerd
  cron: '18 9 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k18-ko19-containerd
  cron: '11 13 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k19-containerd
  cron: '5 14 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k19-ko19-containerd
  cron: '20 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-deb10-k20-containerd
  cron: '58 9 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-deb10-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k17-containerd
  cron: '55 3 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k17-ko19-containerd
  cron: '38 11 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k18-containerd
  cron: '50 2 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k18-ko19-containerd
  cron: '19 14 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k19-containerd
  cron: '21 21 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k19-ko19-containerd
  cron: '52 21 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-flatcar-k20-containerd
  cron: '2 18 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-flatcar-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel7-k17-containerd
  cron: '26 13 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel7-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel7-k17-ko19-containerd
  cron: '4 22 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel7-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel7-k18-containerd
  cron: '55 20 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel7-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel7-k18-ko19-containerd
  cron: '45 3 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel7-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel7-k19-containerd
  cron: '32 11 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel7-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel7-k19-ko19-containerd
  cron: '58 16 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel7-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel7-k20-containerd
  cron: '35 20 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel7-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k17-containerd
  cron: '4 23 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k17-ko19-containerd
  cron: '58 8 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k18-containerd
  cron: '29 14 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k18-ko19-containerd
  cron: '3 5 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k19-containerd
  cron: '46 9 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k19-ko19-containerd
  cron: '8 6 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-rhel8-k20-containerd
  cron: '41 6 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-rhel8-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u1804-k17-containerd
  cron: '59 0 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u1804-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u1804-k17-ko19-containerd
  cron: '33 23 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u1804-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u1804-k18-containerd
  cron: '30 17 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u1804-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u1804-k18-ko19-containerd
  cron: '40 2 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u1804-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u1804-k19-containerd
  cron: '17 14 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u1804-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u1804-k19-ko19-containerd
  cron: '11 1 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u1804-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u1804-k20-containerd
  cron: '26 17 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u1804-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k17-containerd
  cron: '6 21 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k17-ko19-containerd
  cron: '23 17 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k18-containerd
  cron: '51 12 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k18-ko19-containerd
  cron: '58 20 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k19-containerd
  cron: '8 3 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k19-ko19-containerd
  cron: '29 23 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "flannel"}
- name: e2e-kops-grid-flannel-u2004-k20-containerd
  cron: '55 12 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=flannel --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: flannel
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-flannel-u2004-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k17-containerd
  cron: '29 17 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k17-ko19-containerd
  cron: '3 1 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k18-containerd
  cron: '56 0 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k18-ko19-containerd
  cron: '58 12 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k19-containerd
  cron: '31 15 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k19-ko19-containerd
  cron: '25 15 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-amzn2, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "amzn2", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-amzn2-k20-containerd
  cron: '48 0 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='137112412989/amzn2-ami-hvm-2.0.20201126.0-x86_64-gp2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: amzn2
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-amzn2, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-amzn2-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb9-k17-containerd
  cron: '5 4 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb9-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb9-k17-ko19-containerd
  cron: '41 21 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb9-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb9-k18-containerd
  cron: '28 13 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb9-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb9-k18-ko19-containerd
  cron: '40 0 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb9-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb9-k19-containerd
  cron: '51 2 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb9-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb9-k19-ko19-containerd
  cron: '59 3 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb9, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb9-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb9", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb9-k20-containerd
  cron: '28 5 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='379101102735/debian-stretch-hvm-x86_64-gp2-2020-10-31-2842' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb9
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb9, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb9-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k17-containerd
  cron: '56 0 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k17-ko19-containerd
  cron: '57 11 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k18-containerd
  cron: '25 9 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k18-ko19-containerd
  cron: '4 14 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k19-containerd
  cron: '2 6 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k19-ko19-containerd
  cron: '11 21 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-deb10, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "deb10", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-deb10-k20-containerd
  cron: '29 17 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='136693071363/debian-10-amd64-20201207-477' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: admin
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: deb10
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-deb10, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-deb10-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-flatcar-k17-containerd
  cron: '34 5 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-flatcar-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-flatcar-k17-ko19-containerd
  cron: '16 17 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-flatcar-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-flatcar-k18-containerd
  cron: '19 4 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-flatcar-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-flatcar-k18-ko19-containerd
  cron: '41 4 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-flatcar-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-flatcar-k19-containerd
  cron: '8 11 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-flatcar-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-flatcar-k19-ko19-containerd
  cron: '22 7 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-flatcar, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-flatcar-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "flatcar", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-flatcar-k20-containerd
  cron: '15 12 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='075585003325/Flatcar-stable-2605.12.0-hvm' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: core
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: flatcar
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-flatcar, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-flatcar-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel7-k17-containerd
  cron: '49 13 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel7-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel7-k17-ko19-containerd
  cron: '3 5 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel7-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel7-k18-containerd
  cron: '52 20 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel7-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel7-k18-ko19-containerd
  cron: '50 0 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel7-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel7-k19-containerd
  cron: '23 19 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel7-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel7-k19-ko19-containerd
  cron: '13 19 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel7, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel7-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel7", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel7-k20-containerd
  cron: '56 20 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-7.9_HVM_GA-20200917-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel7
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel7, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel7-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k17-containerd
  cron: '47 23 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k17-ko19-containerd
  cron: '29 19 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k18-containerd
  cron: '10 22 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k18-ko19-containerd
  cron: '0 6 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k19-containerd
  cron: '49 1 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k19-ko19-containerd
  cron: '19 5 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-rhel8, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "rhel8", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-rhel8-k20-containerd
  cron: '18 6 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='309956199498/RHEL-8.3.0_HVM-20201031-x86_64-0-Hourly2-GP2' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ec2-user
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: rhel8
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-rhel8, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-rhel8-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u1804-k17-containerd
  cron: '52 16 * * 4'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u1804-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u1804-k17-ko19-containerd
  cron: '10 4 * * 3'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u1804-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u1804-k18-containerd
  cron: '21 1 * * 5'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u1804-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u1804-k18-ko19-containerd
  cron: '7 17 * * 6'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u1804-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u1804-k19-containerd
  cron: '18 6 * * 2'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u1804-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u1804-k19-ko19-containerd
  cron: '12 10 * * 0'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u1804, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u1804-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u1804", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u1804-k20-containerd
  cron: '49 1 * * 1'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-20201201' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u1804
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u1804, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u1804-k20-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k17-containerd
  cron: '57 13 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.17, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k17-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.17", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k17-ko19-containerd
  cron: '40 2 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.17.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.17.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.17
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.17'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.17, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k17-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k18-containerd
  cron: '8 20 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.18, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k18-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.18", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k18-ko19-containerd
  cron: '5 15 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.18.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.18.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.18
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.18'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.18, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k18-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k19-containerd
  cron: '43 11 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.19, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.19", "kops_channel": "alpha", "kops_version": "1.19", "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k19-ko19-containerd
  cron: '26 4 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/markers/release-1.19/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.19.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.19.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.19
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.19'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: '1.19'
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-1.19, kops-distro-u2004, kops-grid, kops-k8s-1.19, kops-kubetest2, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k19-ko19-containerd

# {"cloud": "aws", "container_runtime": "containerd", "distro": "u2004", "k8s_version": "1.20", "kops_channel": "alpha", "kops_version": null, "networking": "kopeio"}
- name: e2e-kops-grid-kopeio-u2004-k20-containerd
  cron: '40 20 * * *'
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  decorate: true
  decoration_config:
    timeout: 90m
  extra_refs:
  - org: kubernetes
    repo: kops
    base_ref: master
    workdir: true
    path_alias: k8s.io/kops
  spec:
    containers:
    - command:
      - runner.sh
      args:
      - bash
      - -c
      - |
        make test-e2e-install
        kubetest2 kops \
          -v 2 \
          --up --down \
          --cloud-provider=aws \
          --create-args="--image='099720109477/ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-20210119.1' --channel=alpha --networking=kopeio --container-runtime=containerd" \
          --env=KOPS_FEATURE_FLAGS= \
          --kops-version-marker=https://storage.googleapis.com/kops-ci/bin/latest-ci-updown-green.txt \
          --kubernetes-version=https://storage.googleapis.com/kubernetes-release/release/stable-1.20.txt \
          --test=kops \
          -- \
          --ginkgo-args="--debug" \
          --test-args="-test.timeout=60m -num-nodes=0" \
          --test-package-marker=stable-1.20.txt \
          --parallel 25 \
          --skip-regex="\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Dashboard|RuntimeClass|RuntimeHandler|Services.*functioning.*NodePort|Services.*rejected.*endpoints|Services.*affinity|check.if.cluster.info.dump.succeeds"
      env:
      - name: KUBE_SSH_KEY_PATH
        value: /etc/aws-ssh/aws-ssh-private
      - name: KUBE_SSH_USER
        value: ubuntu
      image: gcr.io/k8s-testimages/kubekins-e2e:v20210217-8c72491-1.20
      imagePullPolicy: Always
      resources:
        limits:
          memory: 3Gi
        requests:
          cpu: "2"
          memory: 3Gi
  annotations:
    test.kops.k8s.io/cloud: aws
    test.kops.k8s.io/container_runtime: containerd
    test.kops.k8s.io/distro: u2004
    test.kops.k8s.io/k8s_version: '1.20'
    test.kops.k8s.io/kops_channel: alpha
    test.kops.k8s.io/kops_version: ''
    test.kops.k8s.io/networking: kopeio
    testgrid-dashboards: google-aws, kops-distro-u2004, kops-grid, kops-k8s-1.20, kops-kubetest2, kops-latest, sig-cluster-lifecycle-kops
    testgrid-days-of-results: '90'
    testgrid-tab-name: kops-grid-kopeio-u2004-k20-containerd
