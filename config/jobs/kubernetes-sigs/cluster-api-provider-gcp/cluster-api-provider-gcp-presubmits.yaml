presubmits:
  kubernetes-sigs/cluster-api-provider-gcp:
  - name: pull-cluster-api-provider-gcp-test
    always_run: true
    optional: false
    decorate: true
    path_alias: "sigs.k8s.io/cluster-api-provider-gcp"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20191017-ac4b4b5-experimental
        command:
        - "./scripts/ci-test.sh"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-gcp
      testgrid-tab-name: pr-test
  - name: pull-cluster-api-provider-gcp-build
    always_run: true
    optional: false
    decorate: true
    path_alias: "sigs.k8s.io/cluster-api-provider-gcp"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20191017-ac4b4b5-experimental
        command:
        - "./scripts/ci-build.sh"
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-gcp
      testgrid-tab-name: pr-build
  - name: pull-cluster-api-provider-gcp-make
    always_run: true
    optional: false
    decorate: true
    labels:
      preset-dind-enabled: "true"
    path_alias: "sigs.k8s.io/cluster-api-provider-gcp"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20191017-ac4b4b5-experimental
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        command:
        - "runner.sh"
        - "./scripts/ci-make.sh"
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-gcp
      testgrid-tab-name: pr-make
    # conformance test against kubernetes master branch with `kind` + cluster-api-provider-gcp
  - name: pull-cluster-api-provider-gcp-make-conformance
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-dind-enabled: "true"
      preset-kind-volume-mounts: "true"
    always_run: true
    optional: true
    spec:
      containers:
        - image: gcr.io/k8s-testimages/kubekins-e2e:v20191017-ac4b4b5-master
          args:
            - "--job=$(JOB_NAME)"
            - "--root=/go/src"
            - "--repo=k8s.io/kubernetes=master"
            - "--repo=sigs.k8s.io/cluster-api=master"
            - "--repo=sigs.k8s.io/image-builder=master"
            - "--repo=sigs.k8s.io/cluster-api-provider-gcp=$(PULL_REFS)"
            - "--repo=sigs.k8s.io/kind=master"
            - "--service-account=/etc/service-account/service-account.json"
            - "--upload=gs://kubernetes-jenkins/pr-logs"
            - "--scenario=execute"
            - "--"
            - "bash"
            - "--"
            - "-c"
            - "cd ./../../sigs.k8s.io/cluster-api-provider-gcp && scripts/ci-e2e.sh"
          # we need privileged mode in order to do docker in docker
          securityContext:
            privileged: true
          resources:
            requests:
              # these are both a bit below peak usage during build
              # this is mostly for building kubernetes
              memory: "9000Mi"
              # during the tests more like 3-20m is used
              cpu: 2000m
    annotations:
      testgrid-dashboards: sig-cluster-lifecycle-cluster-api-provider-gcp
      testgrid-tab-name: pr-e2e
