#!/bin/bash

# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Usage:
# Creates an auth token on github and installs as a s k8s secret to be used by the prow chart
#
# Example:
# ./generate_auth_k8s.sh
# Enter GitHub username: <MY-BOT-ACCOUNT>
# <MY-BOT-ACCOUNT>'s GitHub Password:
# wrote results to file: github_cred
# GITHUB_AUTH_ID=99013573
# GITHUB_AUTH_TOKEN=<TOKEN_VALUE>
# secret "hookmanager-cred" deleted
# secret "hookmanager-cred" created

set -o errexit
set -o nounset
set -o pipefail

# check if the secret already exists in the k8s cluster - if the command below returns zero then the secret already exists
kubectl get secret hookmanager-cred &> /dev/null
if [ $(echo $?) -eq 0 ]; then
  echo "Auth token secret already defined for this cluster.  Please remove via ./delete_auth_k8s.sh before recreating.";
  exit 1;
fi

bot_user_id=samsungbot

#first create an auth token
contained_id=$(docker run -d jfelten/hook_manager tail -f /dev/null)
docker exec -it $contained_id /hook_manager create_authorization --account=${bot_user_id} --note="${bot_user_id} - generated by hook manager"
eval $(docker exec -it $contained_id cat ./github_cred)
docker kill $contained_id

# Store as kubernetes secret
cat <<EOF | kubectl create -f -
apiVersion: v1
kind: Secret
metadata:
  name: hookmanager-cred
type: Opaque
data:
  user_id: $(echo "$bot_user_id" | tr -d '\n\r' | base64)
  auth_id: $(echo "$GITHUB_AUTH_ID" | tr -d '\n\r' | base64)
  auth_token: $(echo "$GITHUB_AUTH_TOKEN" | tr -d '\n\r' | base64)
  oauth: $(echo "$GITHUB_AUTH_TOKEN" | tr -d '\n\r' | base64)
EOF

