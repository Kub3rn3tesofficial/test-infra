apiVersion: v1
kind: Pod
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-weight: "-5"
  creationTimestamp: 2017-05-05T00:05:57Z
  labels:
    chart: prow-0.1.0
    heritage: Tiller
    release: lovely-panther
  name: test-job
  namespace: default
spec:
  containers:
  - name: test-job
    command:  ["tail","-f","/dev/null"]
    env:
    - name: BOT_USER_ID
      value: samsungbot
    - name: HOOK_URL
      value: http://whatever.com
    - name: REPOS_TO_HOOK
      value: ( [samsung-cnct/lbex samsung-cnct/documentation samsung-cnct/k2 samsung-cnct/terraform-provider-distroimage
        samsung-cnct/flipbit samsung-cnct/gci-iptables-conf-agent samsung-cnct/k2-tools
        samsung-cnct/kraken-ci-jobs samsung-cnct/k8s-on-joyent samsung-cnct/drunkensmee
        samsung-cnct/cassandra-container samsung-cnct/teraform-provider-coreosbox
        samsung-cnct/k2cli samsung-cnct/kraken-services samsung-cnct/careen-docker
        samsung-cnct/technical-onboarding samsung-cnct/team-opensource samsung-cnct/nc-pod
        samsung-cnct/docs-ghp-staging samsung-cnct/samsung-cnct.github.io samsung-cnct/homebrew-terraform-provider-coreosbox
        samsung-cnct/mass-ansible-playbook samsung-cnct/terraform-provider-execute
        samsung-cnct/logrotate samsung-cnct/terraform-provider-coreos samsung-cnct/careen
        samsung-cnct/shared-logging-directory samsung-cnct/k2-logging-fluentd-daemonset
        samsung-cnct/gci-dnsmasq samsung-cnct/vault samsung-cnct/kraken samsung-cnct/consul]
        )
    - name: AUTH_TOKEN
      value: dceb88f7ec9dd65bba446e260212f8b3d1628dd2
    - name: INSTALL_SCRIPT
      value: |-
        HMAC_KEY=`/hook_manager create_hmac` #used by the webhook security
        echo $HMAC_KEY >hmac
        #kubectl create secret generic hmac --from-file=./hmac
        echo 
        REPOS=(`echo ${REPOS_TO_HOOK} | sed -e 's/\[//g;s/\]//g;s/(//g;s/)//g;' | tr -d '\n\r'`)
        touch created_hooks
        for repo in "${REPOS[@]}"
        do
          echo "creating hook for repo: ${repo}"
          HOOK_ID=`/hook_manager create_webhook --credentials=${BOT_USER_ID}:${AUTH_TOKEN} --url=${HOOK_URL} --repo=${repo}`
          echo "${HOOK_ID}:${repo}" >> created_hooks
        done
        kubectl delete secret created-hooks
        kubectl create secret generic created-hooks --from-file=./created_hooks
    image: jfelten/hook_manager:latest
    imagePullPolicy: Always

