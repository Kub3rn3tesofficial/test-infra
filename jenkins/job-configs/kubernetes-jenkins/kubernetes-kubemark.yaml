- job-template:
    name: 'kubernetes-kubemark-{suffix}'
    description: '{description} Test owner: gmarek'
    node: '{jenkins_node}'
    properties:
        - build-discarder:
            days-to-keep: 7
    provider-env: |
        export KUBERNETES_PROVIDER="gce"
        export E2E_MIN_STARTUP_PODS="1"
        export KUBE_GCE_ZONE="us-central1-f"
        export FAIL_ON_GCP_RESOURCE_LEAK="true"
        export CLOUDSDK_CORE_PRINT_UNHANDLED_TRACEBACKS="1"
    builders:
        - activate-gce-service-account
        - shell: |
            {provider-env}
            {job-env}
            {post-env}
            timeout -k {kill-timeout}m {timeout}m {runner} && rc=$? || rc=$?
            {report-rc}
    publishers:
        - junit-publisher
        - email-ext:
            recipients: "gmarek@google.com"
        - gcs-uploader
    triggers:
        - timed: '{cron-string}'
    wrappers:
        - timeout:
            timeout: '{jenkins-timeout}'
            fail: true
        - workspace-cleanup:
            dirmatch: true
            exclude: ['.git/']
            external-deletion-command: 'sudo rm -rf %s'
        - e2e-credentials-binding

- project:
    name: kubernetes-kubemark
    suffix:
        - '500-gce':
            description: 'Run Kubemark test on a fake 500 node cluster to test for regressions on bigger clusters'
            # TODO: We should replace it with 'scalability' instead of using
            # reusing "build" tag here once agents will have this tag.
            jenkins_node: 'build'
            timeout: 90
            cron-string: '{sq-cron-string}'
            job-env: |
                export ENABLE_GARBAGE_COLLECTOR="true"
                export E2E_NAME="kubemark-500"
                export PROJECT="k8s-jenkins-blocking-kubemark"
                export E2E_TEST="false"
                export USE_KUBEMARK="true"
                export KUBEMARK_TESTS="\[Feature:Performance\]"
                export KUBEMARK_TEST_ARGS="--gather-resource-usage=true --garbage-collector-enabled=true"
                # Increase throughput in Kubemark master components.
                export KUBEMARK_MASTER_COMPONENTS_QPS_LIMITS="--kube-api-qps=100 --kube-api-burst=100"
                # Increase throughput in Load test.
                export LOAD_TEST_THROUGHPUT=50
                export FAIL_ON_GCP_RESOURCE_LEAK="false"
                # Override defaults to be independent from GCE defaults and set kubemark parameters
                export NUM_NODES="6"
                export MASTER_SIZE="n1-standard-4"
                export NODE_SIZE="n1-standard-8"
                export KUBE_GCE_ZONE="us-central1-f"
                export KUBEMARK_MASTER_SIZE="n1-standard-16"
                export KUBEMARK_NUM_NODES="500"
                # The kubemark scripts build a Docker image
                export JENKINS_ENABLE_DOCKER_IN_DOCKER="y"
                export KUBE_NODE_OS_DISTRIBUTION="gci"
    jobs:
        - 'kubernetes-kubemark-{suffix}'
