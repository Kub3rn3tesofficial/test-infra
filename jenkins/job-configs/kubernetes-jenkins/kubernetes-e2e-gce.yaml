- job-template:
    builders:
    - shell: |
        {provider-env}
        {job-env}
        {post-env}
        timeout -k {kill-timeout}m {timeout}m {runner} && rc=$? || rc=$?
        if [[ ${{rc}} -ne 0 ]]; then
            if [[ -x kubernetes/cluster/log-dump.sh && -d _artifacts ]]; then
                echo "Dumping logs for any remaining nodes"
                ./kubernetes/cluster/log-dump.sh _artifacts
            fi
        fi
        {report-rc}
    description: '{description} Test owner: {test-owner}.'
    disabled: '{obj:disable_job}'
    jenkins_node: e2e
    name: kubernetes-e2e-{suffix}
    node: '{jenkins_node}'
    properties:
    - build-discarder:
        days-to-keep: 7
    provider-env: |
      export KUBERNETES_PROVIDER="gce"
      export E2E_MIN_STARTUP_PODS="1"
      export KUBE_GCE_ZONE="us-central1-f"
      export FAIL_ON_GCP_RESOURCE_LEAK="true"
      export CLOUDSDK_CORE_PRINT_UNHANDLED_TRACEBACKS="1"
    publishers:
    - claim-build
    - junit-publisher
    - log-parser
    - email-ext:
        recipients: '{emails}'
    - gcs-uploader
    triggers:
    - reverse:
        jobs: '{trigger-job}'
        result: success
    - timed: '{cron-string}'
    wrappers:
    - ansicolor:
        colormap: xterm
    - timeout:
        fail: true
        timeout: '{jenkins-timeout}'
    - timestamps
    - workspace-cleanup:
        dirmatch: true
        external-deletion-command: sudo rm -rf %s
- project:
    jobs:
    - kubernetes-e2e-{suffix}
    name: kubernetes-e2e-gce-master
    suffix:
    - gce:
        cron-string: '{sq-cron-string}'
        description: Runs all non-slow, non-serial, non-flaky, tests on GCE in parallel.
        job-env: |
          # This is the *only* job that should publish the last green version.
          export E2E_PUBLISH_GREEN_VERSION="true"
          # This list should match the list in kubernetes-pull-build-test-e2e-gce.
          export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
          export PROJECT="k8s-jkns-e2e-gce"
        timeout: 50
    - gce-slow:
        cron-string: '{sq-cron-string}'
        description: Runs slow tests on GCE, sequentially.
        job-env: |
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Slow\] \
                                   --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
          export KUBE_GCE_ZONE="europe-west1-c"
          export PROJECT="k8s-jkns-e2e-gce-slow"
        timeout: 150
    - gce-serial:
        description: Run [Serial], [Disruptive], tests on GCE.
        job-env: |
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Serial\]|\[Disruptive\] \
                                   --ginkgo.skip=\[Flaky\]|\[Feature:.+\]"
          export PROJECT="kubernetes-jkns-e2e-gce-serial"
        timeout: 300
    - gce-reboot:
        description: Run [Feature:Reboot] tests on GCE.
        job-env: |
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Reboot\]"
          export PROJECT="k8s-jkns-e2e-gce-ci-reboot"
        timeout: 180
    - gce-autoscaling:
        description: Run autoscaling E2E tests on GCE.
        job-env: |
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:ClusterSizeAutoscalingScaleUp\]|\[Feature:ClusterSizeAutoscalingScaleDown\]|\[Feature:InitialResources\] \
                                   --ginkgo.skip=\[Flaky\]"
          export PROJECT="k8s-jnks-e2e-gce-autoscaling"
          # Override GCE default for cluster size autoscaling purposes.
          export ENABLE_CUSTOM_METRICS="true"
          export KUBE_ENABLE_CLUSTER_AUTOSCALER="true"
          export NUM_NODES=3
          export KUBE_AUTOSCALER_MIN_NODES=3
          export KUBE_AUTOSCALER_MAX_NODES=5
          export KUBE_AUTOSCALER_ENABLE_SCALE_DOWN=true
          export KUBE_ADMISSION_CONTROL="NamespaceLifecycle,InitialResources,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota"
        timeout: 210
    - gce-autoscaling-migs:
        description: Run autoscaling E2E tests on GCE with multiple MIGs.
        job-env: |
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:ClusterSizeAutoscalingScaleUp\]|\[Feature:ClusterSizeAutoscalingScaleDown\] --ginkgo.skip=\[Flaky\]"
          export PROJECT="k8s-jnks-e2e-gce-autoscl-migs"
          # Override GCE default for cluster size autoscaling purposes.
          export KUBE_ENABLE_CLUSTER_AUTOSCALER="true"
          export NUM_NODES=3
          export MAX_INSTANCES_PER_MIG=2
          export KUBE_AUTOSCALER_MIN_NODES=3
          export KUBE_AUTOSCALER_MAX_NODES=5
          export KUBE_AUTOSCALER_ENABLE_SCALE_DOWN=true
          export KUBE_ADMISSION_CONTROL="NamespaceLifecycle,InitialResources,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota"
        timeout: 210
    - gce-flaky:
        description: Run the flaky tests on GCE, sequentially.
        job-env: |
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Flaky\] \
                                   --ginkgo.skip=\[Feature:.+\]"
          export PROJECT="k8s-jkns-e2e-gce-flaky"
        timeout: 180
    - gce-scalability:
        cron-string: '{sq-cron-string}'
        description: Run the performance/scalability tests on GCE. A larger cluster
          is used.
        job-env: |
          export E2E_NAME="e2e-scalability"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Performance\] \
                                   --gather-resource-usage=true \
                                   --gather-metrics-at-teardown=true \
                                   --gather-logs-sizes=true \
                                   --output-print-type=json"
          # Create a project k8s-jenkins-scalability-head and move this test there
          export PROJECT="google.com:k8s-jenkins-scalability"
          export FAIL_ON_GCP_RESOURCE_LEAK="false"
          # Override GCE defaults.
          export MASTER_SIZE="n1-standard-4"
          export NODE_SIZE="n1-standard-2"
          export NODE_DISK_SIZE="50GB"
          export NUM_NODES="100"
          export REGISTER_MASTER="true"
          # Reduce logs verbosity
          export TEST_CLUSTER_LOG_LEVEL="--v=2"
          # TODO: Remove when we figure out the reason for occasional failures #19048
          export KUBELET_TEST_LOG_LEVEL="--v=4"
          # Increase resync period to simulate production
          export TEST_CLUSTER_RESYNC_PERIOD="--min-resync-period=12h"
          # Increase delete collection parallelism
          export TEST_CLUSTER_DELETE_COLLECTION_WORKERS="--delete-collection-workers=16"
        timeout: 120
    - gce-container-vm:
        cron-string: '{sq-cron-string}'
        description: Runs all non-slow, non-serial, non-flaky, tests on GCE in parallel
          on a new ContainerVM image.
        job-env: |
          # This list should match the list in kubernetes-pull-build-test-e2e-gce.
          export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
          export PROJECT="k8s-jenkins-cvm"
          export KUBE_GCE_NODE_IMAGE="container-v1-3-v20160604"
        timeout: 50
    - gce-master-on-cvm:
        cron-string: H * * * *
        description: Runs all non-slow, non-serial, non-flaky, tests on GCE in parallel
          with the master on a ContainerVM image.
        job-env: |
          # This list should match the list in kubernetes-pull-build-test-e2e-gce.
          export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
          export PROJECT="k8s-jenkins-master-cvm"
          export KUBE_OS_DISTRIBUTION="debian"
          export KUBE_GCE_MASTER_IMAGE="container-v1-3-v20160604"
          export KUBE_GCE_NODE_IMAGE="container-v1-3-v20160604"
        test-owner: robertbailey & zml
        timeout: 50
    - gce-proto:
        cron-string: '{sq-cron-string}'
        description: Runs all non-slow, non-serial, non-flaky, tests on GCE in parallel
          with protobuf communication.
        job-env: |
          # This list should match the list in kubernetes-pull-build-test-e2e-gce.
          export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\] \
                                   --kube-api-content-type=application/vnd.kubernetes.protobuf"
          export GINKGO_PARALLEL="y"
          export PROJECT="k8s-jkns-e2e-protobuf"
          # Store protobufs in database.
          export TEST_CLUSTER_STORAGE_CONTENT_TYPE="--storage-media-type=application/vnd.kubernetes.protobuf"
          # Use protobufs to communicate with apiserver.
          export TEST_CLUSTER_API_CONTENT_TYPE="--kube-api-content-type=application/vnd.kubernetes.protobuf"
        timeout: 50
    - gce-examples:
        description: Run E2E examples test on GCE.
        job-env: |
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Example\]"
          export PROJECT="k8s-jkns-e2e-examples"
        timeout: 90
    - gce-ubernetes-lite:
        description: Run all non-flaky, non-slow, non-disruptive, non-feature tests
          on GCE, in parallel, and in a multi-zone (Ubernetes-lite) cluster.
        emails: quinton@google.com, justin@fathomdb.com
        job-env: |
          export PROJECT="k8s-jkns-e2e-gce-ubelite"
          export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
          export MULTIZONE="true"
          export E2E_ZONES="us-central1-a us-central1-b us-central1-f" # Where the nodes reside.  Master is in the first one.
          export KUBE_GCE_ZONE="us-central1-a" # Where the master resides - hangover due to legacy scripts.
        test-owner: quinton
        timeout: 150
    - gce-federation:
        description: Run all federation e2e tests.
        emails: quinton@google.com, colin.hom@coreos.com
        job-env: |
          export PROJECT="k8s-jkns-e2e-gce-federation"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Federation\]"
          export GINKGO_PARALLEL="n" # We don't have namespaces yet in federation apiserver, so we need to serialize
          export FEDERATION="true"
          export E2E_ZONES="us-central1-a us-central1-b us-central1-f" # Where the clusters will be created. Federation components are now deployed to the last one.
          export FEDERATION_PUSH_REPO_BASE="gcr.io/k8s-jkns-e2e-gce-federation"
          export KUBE_GCE_ZONE="us-central1-f" #TODO(colhom): This should be generalized out to plural case
          export KUBE_GCS_RELEASE_BUCKET=kubernetes-federation-release
        test-owner: quinton
        timeout: 300
        trigger-job: kubernetes-federation-build
    - gce-kubenet:
        description: Run all non-flaky, non-slow, non-disruptive, non-feature tests
          on GCE using kubenet as network provider
        emails: mixia@google.com
        job-env: |
          export PROJECT="k8s-jkns-e2e-gce-kubenet"
          export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
          export NETWORK_PROVIDER="kubenet"
        test-owner: mixia
        timeout: 120
    test-owner: Build Cop
    trigger-job: kubernetes-build
- project:
    jobs:
    - kubernetes-e2e-{suffix}
    name: kubernetes-e2e-gce-1-2
    suffix:
    - gce-release-1.2:
        description: Runs all non-slow, non-serial, non-flaky, tests on GCE in parallel
          on the release-1.2 branch.
        job-env: |
          export JENKINS_PUBLISHED_VERSION="ci/latest-1.2"
          export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
          export PROJECT="k8s-jkns-e2e-gce-1-2"
        timeout: 50
    - gce-reboot-release-1.2:
        description: Run [Feature:Reboot] tests on GCE on the release-1.2 branch.
        job-env: |
          export JENKINS_PUBLISHED_VERSION="ci/latest-1.2"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Reboot\]"
          export PROJECT="k8s-jkns-e2e-gce-reboot-1-2"
        timeout: 180
    - gce-slow-release-1.2:
        description: Runs slow tests on GCE, sequentially on the release-1.2 branch.
        job-env: |
          export JENKINS_PUBLISHED_VERSION="ci/latest-1.2"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Slow\] \
                                   --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
          export PROJECT="k8s-jkns-e2e-gce-slow-1-2"
        timeout: 60
    - gce-serial-release-1.2:
        description: Run [Serial], [Disruptive], tests on GCE on the release-1.2 branch.
        job-env: |
          export JENKINS_PUBLISHED_VERSION="ci/latest-1.2"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Serial\]|\[Disruptive\] \
                                   --ginkgo.skip=\[Flaky\]|\[Feature:.+\]"
          export PROJECT="k8s-jkns-e2e-gce-serial-1-2"
        timeout: 300
    - gce-ingress-release-1.2:
        description: Run [Feature:Ingress] tests on GCE on the release-1.2 branch.
        emails: beeps@google.com
        job-env: |
          export JENKINS_PUBLISHED_VERSION="ci/latest-1.2"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Ingress\]"
          export PROJECT="kubernetes-ingress-1-2"
          # TODO: Enable this when we've split 1.2 tests into another project.
          export FAIL_ON_GCP_RESOURCE_LEAK="false"
        test-owner: beeps
        timeout: 90
    - gce-scalability-release-1.3:
        cron-string: H 8 * * 6
        description: Run scalability E2E tests on GCE from the release-1.2 branch.
        job-env: |
          export JENKINS_PUBLISHED_VERSION="ci/latest-1.3"
          export E2E_NAME="e2e-scalability-1-3"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Performance\] \
                                   --gather-resource-usage=true \
                                   --gather-metrics-at-teardown=true \
                                   --gather-logs-sizes=true \
                                   --output-print-type=json"
          # Use the 1.1 project for now, since it has quota.
          # TODO: create a project k8s-e2e-gce-scalability-release and move this test there
          export PROJECT="k8s-e2e-gce-scalability-1-1"
          export FAIL_ON_GCP_RESOURCE_LEAK="false"
          # Override GCE defaults.
          export KUBE_GCE_ZONE="us-east1-b"
          export MASTER_SIZE="n1-standard-4"
          export NODE_SIZE="n1-standard-1"
          export NODE_DISK_SIZE="50GB"
          export NUM_NODES="100"
          export REGISTER_MASTER="true"
          # Reduce logs verbosity
          export TEST_CLUSTER_LOG_LEVEL="--v=2"
          # TODO: Remove when we figure out the reason for occasional failures #19048
          export KUBELET_TEST_LOG_LEVEL="--v=4"
          # Increase resync period to simulate production
          export TEST_CLUSTER_RESYNC_PERIOD="--min-resync-period=12h"
          # Increase delete collection parallelism
          export TEST_CLUSTER_DELETE_COLLECTION_WORKERS="--delete-collection-workers=16"
        timeout: 120
    test-owner: Build Cop
    trigger-job: kubernetes-build-1.2
- project:
    jobs:
    - kubernetes-e2e-{suffix}
    name: kubernetes-e2e-gce-1-3
    suffix:
    - gce-release-1.3:
        description: Runs all non-slow, non-serial, non-flaky, tests on GCE in parallel
          on the release-1.3 branch.
        job-env: |
          export JENKINS_PUBLISHED_VERSION="ci/latest-1.3"
          export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
          export PROJECT="k8s-jkns-gce-1-3"
        timeout: 50
    - gce-reboot-release-1.3:
        description: Run [Feature:Reboot] tests on GCE on the release-1.3 branch.
        job-env: |
          export JENKINS_PUBLISHED_VERSION="ci/latest-1.3"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Reboot\]"
          export PROJECT="k8s-jkns-gce-reboot-1-3"
        timeout: 180
    - gce-slow-release-1.3:
        description: Runs slow tests on GCE, sequentially on the release-1.3 branch.
        job-env: |
          export JENKINS_PUBLISHED_VERSION="ci/latest-1.3"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Slow\] \
                                   --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
          export PROJECT="k8s-jkns-gce-slow-1-3"
        timeout: 60
    - gce-serial-release-1.3:
        description: Run [Serial], [Disruptive], tests on GCE on the release-1.3 branch.
        job-env: |
          export JENKINS_PUBLISHED_VERSION="ci/latest-1.3"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Serial\]|\[Disruptive\] \
                                   --ginkgo.skip=\[Flaky\]|\[Feature:.+\]"
          export PROJECT="k8s-jkns-gce-serial-1-3"
        timeout: 300
    test-owner: Release 1.3 owner
    trigger-job: kubernetes-build-1.3
- project:
    branch: release-1.1
    cron-string: H */6 * * *
    jenkins_node: master
    job-env: ""
    jobs:
    - kubernetes-e2e-{suffix}
    name: kubernetes-e2e-gce-1.1
    post-env: ""
    provider-env: ""
    runner: '{old-runner-1-1}'
    suffix:
    - gce-release-1.1:
        description: Run E2E tests on GCE from the release-1.1 branch.
        timeout: 175
    test-owner: Build Cop
    trigger-job: kubernetes-build-1.1
- project:
    jobs:
    - kubernetes-e2e-{suffix}
    name: kubernetes-e2e-gce-features
    suffix:
    - gce-ingress:
        description: Run [Feature:Ingress] tests on GCE.
        emails: beeps@google.com
        job-env: |
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Ingress\]"
          export PROJECT="kubernetes-ingress"
          # TODO: Enable this when we've split 1.2 tests into another project.
          export FAIL_ON_GCP_RESOURCE_LEAK="false"
        test-owner: beeps
        timeout: 90
    - gce-flannel:
        description: Run E2E tests on GCE using Flannel and the latest successful
          build. This suite is quarantined in a dedicated project because Flannel
          integration is experimental.
        disable_job: true
        emails: beeps@google.com
        job-env: |
          # XXX Not a unique project
          export E2E_NAME="e2e-flannel"
          export PROJECT="kubernetes-flannel"
          export FAIL_ON_GCP_RESOURCE_LEAK="false"
          # Override GCE defaults.
          export NETWORK_PROVIDER="flannel"
        test-owner: beeps
        timeout: 120
    - gce-es-logging:
        description: Run [Feature:Elasticsearch] tests on GCE using the latest successful
          build.
        emails: mixia@google.com
        job-env: |
          export PROJECT="kubernetes-es-logging"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Elasticsearch\]"
          export KUBE_LOGGING_DESTINATION="elasticsearch"
        test-owner: mixia
        timeout: 90
    - gce-petset:
        description: Run [Feature:PetSet] tests on GCE.
        emails: beeps@google.com
        job-env: |
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:PetSet\]"
          export PROJECT="kubernetes-petset"
          export FAIL_ON_GCP_RESOURCE_LEAK="false"  # TODO: Enable once we've fixed #23032
        test-owner: beeps
        timeout: 90
    trigger-job: kubernetes-build
- project:
    branch: master
    cron-string: ""
    description: Starts and deletes empty 2000 node cluster and runs scalability tests
      on it. Does allow few Nodes to fail during startup.
    emails: gmarek@google.com
    job-env: |
      # XXX Not a unique project
      export E2E_NAME="e2e-enormous-cluster"
      export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Performance\] --kube-api-content-type=application/vnd.kubernetes.protobuf"
      export PROJECT="kubernetes-scale"
      export FAIL_ON_GCP_RESOURCE_LEAK="false"
      # Override GCE defaults.
      # Temporarily switch of Heapster, as this will not schedule anywhere.
      # TODO: Think of a solution to enable it.
      export KUBE_ENABLE_CLUSTER_MONITORING="none"
      export CLUSTER_IP_RANGE="10.224.0.0/13"
      # TODO: Move to us-central1-c once we have permission for it.
      export KUBE_GCE_ZONE="us-east1-a"
      export MASTER_SIZE="n1-standard-32"
      export NODE_SIZE="n1-standard-1"
      export NODE_DISK_SIZE="50GB"
      export NUM_NODES="2000"
      export ALLOWED_NOTREADY_NODES="20"
      # Reduce logs verbosity
      export TEST_CLUSTER_LOG_LEVEL="--v=1"
      export MAX_INSTANCES_PER_MIG="1000"
      # Increase resync period to simulate production
      export TEST_CLUSTER_RESYNC_PERIOD="--min-resync-period=12h"
      # Increase delete collection parallelism
      export TEST_CLUSTER_DELETE_COLLECTION_WORKERS="--delete-collection-workers=16"
    jobs:
    - kubernetes-e2e-{suffix}
    name: kubernetes-e2e-gce-enormous-cluster
    suffix: gce-enormous-cluster
    test-owner: gmarek
    timeout: 1440
    trigger-job: ""

