- job-template:
    name: 'kubernetes-e2e-kops-{suffix}'
    node: '{jenkins_node}'
    description: '{description} Test owner: {test-owner}.'
    jenkins_node: 'e2e'
    disabled: '{obj:disable_job}'
    properties:
        - build-discarder:
            days-to-keep: 7
    triggers:
        - reverse:
            jobs: '{trigger-job}'
            result: success
        - timed: '{cron-string}'
    publishers:
        - junit-publisher
        - email-ext:
            recipients: '{emails}'
        - gcs-uploader
    provider-env: |
        export E2E_OPT="--deployment kops --kops $WORKSPACE/kops -kops-cluster {suffix}.test-aws.k8s.io -kops-state s3://k8s-kops-jenkins/"
        export AWS_CONFIG_FILE=/workspace/.aws/credentials
        # This is needed to be able to create PD from the e2e test
        export AWS_SHARED_CREDENTIALS_FILE=/workspace/.aws/credentials
        export KUBE_SSH_USER=admin
    builders:
        - activate-gce-service-account
        - shell: |
            {provider-env}
            {job-env}
            {post-env}
            if ! curl -fsS --retry 3 -o "$WORKSPACE/kops.url" "https://storage.googleapis.com/kops-ci/bin/latest-ci.txt"; then
               echo "Can't retrieve kops URL" >&2
               exit 1
            fi
            if ! curl -fsS --retry 3 -o "$WORKSPACE/kops" "$(cat $WORKSPACE/kops.url)/linux/amd64/kops"; then
               echo "Can't download kops" >&2
               exit 1
            fi
            export NODEUP_URL="$(cat $WORKSPACE/kops.url)/linux/amd64/nodeup"
            timeout -k {kill-timeout}m {timeout}m {runner} && rc=$? || rc=$?
            {report-rc}
    wrappers:
        - e2e-credentials-binding
        - timeout:
            timeout: '{jenkins-timeout}'
            fail: true
        - workspace-cleanup:
            dirmatch: true
            external-deletion-command: 'sudo rm -rf %s'

- project:
    name: kubernetes-kops-aws
    test-owner: 'zmerlynn'
    emails: 'zml@google.com'
    timeout: 240
    suffix:
        - 'aws-updown':  # kubernetes-e2e-kops-aws-updown
            description: 'Bring a cluster up using kops, run a short sniff test, delete it.'
            cron-string: '{sq-cron-string}'
            trigger-job: 'kubernetes-build'
            job-env: |
                export GINKGO_TEST_ARGS="--ginkgo.focus=\[k8s.io\]\sNetworking.*\[Conformance\]"
                export GINKGO_PARALLEL="y"
                export PROJECT="fake-project-ignored"
    jobs:
        - 'kubernetes-e2e-kops-{suffix}'
