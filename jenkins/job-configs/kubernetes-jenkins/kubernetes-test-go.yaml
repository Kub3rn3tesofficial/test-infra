- job-template:
    name: 'kubernetes-test-{suffix}'
    description: |
        Grab the latest from GitHub, then run unit and integration tests.<br>
        Test Owner: Build Cop
    properties:
    - build-discarder:
        num-to-keep: 200
    node: unittest
    builders:
    - activate-gce-service-account
    - shell: 'JENKINS_BUILD_STARTED=true bash <(curl -fsS --retry 3 "https://raw.githubusercontent.com/kubernetes/kubernetes/master/hack/jenkins/upload-to-gcs.sh")'
    - shell: |
        export KUBE_FORCE_VERIFY_CHECKS='y'
        export KUBE_VERIFY_GIT_BRANCH='{branch}'
        timeout -k {kill-timeout}m {timeout}m ./hack/jenkins/gotest-dockerized.sh && rc=$? || rc=$?
        {report-rc}
    publishers:
    - xunit:
        thresholds:
        - failed:
            unstable: 0
            unstablenew: 0
            failure:
            failurenew:
        - skipped:
            unstable:
            unstablenew:
            failure:
            failurenew:
        types:
        - junit:
            pattern: '_artifacts/**.xml'
            deleteoutput: false
    - gcs-uploader
    scm:
    - git:
        url: https://github.com/kubernetes/kubernetes
        branches:
        - '{branch}'
        browser: githubweb
        browser-url: https://github.com/kubernetes/kubernetes
        wipe-workspace: false
        skip-tag: true
    triggers:
    - pollscm:
        cron: 'H/2 * * * *'
    - timed: '{cron-string}'
    wrappers:
    - e2e-credentials-binding
    - timeout:
        timeout: '{jenkins-timeout}'
        fail: true
    - workspace-cleanup:
        dirmatch: true
        external-deletion-command: 'sudo rm -rf %s'
        exclude: ['**/.git/']

- project:
    name: kubernetes-test-go
    suffix:
    - 'go':  # critical
        branch: 'master'
        cron-string: '{sq-cron-string}'
        timeout: 100
    jobs:
    - 'kubernetes-test-{suffix}'
