- job-template:
    name: 'kubernetes-garbagecollector-{suffix}'
    description: '{description} Test owner: xuchao'
    node: 'e2e'
    properties:
        - build-discarder:
            days-to-keep: 7
    provider-env: |
        export KUBERNETES_PROVIDER="gce"
        export E2E_MIN_STARTUP_PODS="1"
        export KUBE_GCE_ZONE="us-central1-f"
        export FAIL_ON_GCP_RESOURCE_LEAK="true"
        export CLOUDSDK_CORE_PRINT_UNHANDLED_TRACEBACKS="1"
    builders:
        - activate-gce-service-account
        - shell: |
            {provider-env}
            {job-env}
            {post-env}
            timeout -k {kill-timeout}m {timeout}m {runner} && rc=$? || rc=$?
            {report-rc}
    publishers:
        - claim-build
        - junit-publisher
        - log-parser
        - email-ext:
            recipients: "xuchao@google.com"
        - gcs-uploader
    triggers:
        - timed: '{cron-string}'
    wrappers:
        - ansicolor:
            colormap: xterm
        - timeout:
            timeout: '{jenkins-timeout}'
            fail: true
        - timestamps
        - workspace-cleanup:
            dirmatch: true
            external-deletion-command: 'sudo rm -rf %s'
        - e2e-credentials-binding

- project:
    name: kubernetes-garbage-collector
    suffix:
        - 'feature':  # kubernetes-garbagecollector-feature
            description: 'Run the garbage collector specific tests'
            timeout: 600
            cron-string: 'H H/6 * * *'
            job-env: |
                # Start the gc in controller plane
                export ENABLE_GARBAGE_COLLECTOR="true"
                export E2E_NAME="garbagecollector-feature"
                export PROJECT="k8s-jenkins-garbagecollector"
                export E2E_TEST="false"
                export USE_KUBEMARK="true"
                export KUBEMARK_TESTS="\[Feature:GarbageCollector\]"
                export KUBEMARK_TEST_ARGS="--gather-resource-usage=true --garbage-collector-enabled=true"
                export CREATE_SERVICES="true"
                export FAIL_ON_GCP_RESOURCE_LEAK="false"
                # Override defaults to be independent from GCE defaults and set kubemark parameters
                export NUM_NODES="3"
                export MASTER_SIZE="n1-standard-2"
                export NODE_SIZE="n1-standard-4"
                export KUBE_GCE_ZONE="us-central1-f"
                export KUBEMARK_MASTER_SIZE="n1-standard-4"
                export KUBEMARK_NUM_NODES="100"
                # The kubemark scripts build a Docker image
                export JENKINS_ENABLE_DOCKER_IN_DOCKER="y"
        - 'e2e-gce':  # kubernetes-garbagecollector-e2e-gce
            cron-string: 'H H/6 * * *'
            description: 'Runs all non-slow, non-serial, non-flaky, tests on GCE in parallel, with the Garbage Collector turned on'
            timeout: 50
            job-env: |
                # This list should match the list in kubernetes-pull-build-test-e2e-gce.
                export ENABLE_GARBAGE_COLLECTOR="true"
                export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
                export GINKGO_PARALLEL="y"
                export PROJECT="k8s-jenkins-garbagecollector-e2e-gce"
    jobs:
        - 'kubernetes-garbagecollector-{suffix}'
