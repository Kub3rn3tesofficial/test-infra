- job-template:
    builders:
    - shell: |
        {provider-env}
        {job-env}
        {post-env}
        timeout -k {kill-timeout}m {timeout}m {runner} && rc=$? || rc=$?
        if [[ ${{rc}} -ne 0 ]]; then
            if [[ -x kubernetes/cluster/log-dump.sh && -d _artifacts ]]; then
                echo "Dumping logs for any remaining nodes"
                ./kubernetes/cluster/log-dump.sh _artifacts
            fi
        fi
        {report-rc}
    description: '{description} Test owner: {test-owner}.'
    disabled: '{obj:disable_job}'
    jenkins_node: e2e
    name: kubernetes-e2e-{gke-suffix}
    node: '{jenkins_node}'
    properties:
    - build-discarder:
        days-to-keep: 7
    provider-env: |
      export KUBERNETES_PROVIDER="gke"
      export ZONE="us-central1-f"
      export CLOUDSDK_BUCKET="gs://cloud-sdk-testing/ci/staging"
      export CLOUDSDK_API_ENDPOINT_OVERRIDES_CONTAINER="https://test-container.sandbox.googleapis.com/"
      export FAIL_ON_GCP_RESOURCE_LEAK="true"
    publishers:
    - claim-build
    - junit-publisher
    - log-parser
    - email-ext:
        recipients: '{emails}'
    - gcs-uploader
    triggers:
    - reverse:
        jobs: '{trigger-job}'
        result: success
    - timed: '{cron-string}'
    wrappers:
    - ansicolor:
        colormap: xterm
    - timeout:
        fail: true
        timeout: '{jenkins-timeout}'
    - timestamps
    - workspace-cleanup:
        dirmatch: true
        external-deletion-command: sudo rm -rf %s
- project:
    gke-suffix:
    - gke:
        cron-string: '{sq-cron-string}'
        description: Runs all non-slow, non-serial, non-flaky, tests on GKE in parallel
          (against GKE test endpoint)
        job-env: |
          export PROJECT="k8s-jkns-e2e-gke-ci"
          export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
          export CLOUDSDK_CONTAINER_USE_CLIENT_CERTIFICATE=False
        timeout: 50
    - gke-slow:
        cron-string: '{sq-cron-string}'
        description: Run slow E2E tests on GKE using the latest successful build.
        job-env: |
          export PROJECT="k8s-jkns-e2e-gke-slow"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Slow\] \
                                   --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
        timeout: 150
    - gke-serial:
        description: Run [Serial], [Disruptive] tests on GKE.
        job-env: |
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Serial\]|\[Disruptive\] \
                                   --ginkgo.skip=\[Flaky\]|\[Feature:.+\]"
          export PROJECT="jenkins-gke-e2e-serial"
        timeout: 300
    - gke-reboot:
        description: Run [Feature:Reboot] tests on GKE using the latest successful
          build.
        job-env: |
          export PROJECT="k8s-jkns-e2e-gke-ci-reboot"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Reboot\]"
        timeout: 180
    - gke-flaky:
        description: |
          Run flaky e2e tests using the following config:<br>
          - provider: GKE<br>
          - api proxy: staging<br>
          - borg job: test<br>
          - client (kubectl): ci/latest.txt<br>
          - cluster (k8s): ci/latest.txt<br>
          - tests: ci/latest.txt
        job-env: |
          export PROJECT="k8s-jkns-e2e-gke-ci-flaky"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Flaky\] \
                                   --ginkgo.skip=\[Feature:.+\]"
          export CLOUDSDK_CONTAINER_USE_CLIENT_CERTIFICATE=False
        timeout: 300
    - gke-multizone:
        description: Run all non-flaky, non-slow, non-disruptive, non-feature tests
          on GKE, in parallel, and in a multi-zone (Ubernetes-lite) cluster.
        emails: arob@google.com, quinton@google.com
        job-env: |
          export PROJECT="k8s-jkns-e2e-gke-multizone"
          export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
          export ZONE="us-central1-f"
          export ADDITIONAL_ZONES="us-central1-a,us-central1-b"
        timeout: 150
    - gke-autoscaling:
        description: Run all cluster autoscaler tests on GKE.
        job-env: |
          export PROJECT="k8s-e2e-gke-autoscaling"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:ClusterSizeAutoscalingScaleUp\]|\[Feature:ClusterSizeAutoscalingScaleDown\] \
                                   --ginkgo.skip=\[Flaky\]"
          export NUM_NODES=3
        timeout: 300
    - gke-large-cluster:
        cron-string: ""
        description: Run all non-flaky, non-slow, non-disruptive, non-feature tests
          on GKE, in parallel on a large (1000 node) GKE cluster
        emails: zml@google.com
        job-env: |
          export E2E_NAME="gke-large-cluster"
          export PROJECT="kubernetes-scale"
          # TODO: Remove FAIL_ON_GCP_RESOURCE_LEAK when PROJECT changes back to gke-large-cluster-jenkins.
          export FAIL_ON_GCP_RESOURCE_LEAK="false"
          # TODO: Remove HPA and "master services" tests after enabling Heapster.
          export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]|\[HPA\]|Kubernetes\smaster\sservices\sis\sincluded\sin\scluster-info"
          export GINKGO_PARALLEL="y"
          export ZONE="us-east1-a"
          export NUM_NODES=2000
          export MACHINE_TYPE="n1-standard-1"
          export ALLOWED_NOTREADY_NODES="10"
          export CLUSTER_IP_RANGE="10.8.0.0/13"
          # We were asked (by MIG team) to not create more than 5 MIGs per zone.
          # We also paged SREs with max-nodes-per-pool=400 (5 concurrent MIGs)
          # So setting max-nodes-per-pool=1000, to check if that helps.
          export GKE_CREATE_FLAGS="--max-nodes-per-pool=1000 --no-enable-cloud-monitoring --disable-addons HorizontalPodAutoscaling"
          export CLOUDSDK_API_ENDPOINT_OVERRIDES_CONTAINER="https://staging-container.sandbox.googleapis.com/"
        timeout: 450
        trigger-job: ""
    jobs:
    - kubernetes-e2e-{gke-suffix}
    name: kubernetes-e2e-gke-master
    test-owner: Build Cop
    trigger-job: kubernetes-build
- project:
    gke-suffix:
    - gke-release-1.3:
        description: Run E2E tests on GKE from the release-1.3 branch.
        job-env: |
          export JENKINS_PUBLISHED_VERSION="ci/latest-1.3"
          export PROJECT="k8s-jkns-gke-1-3"
          export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
        timeout: 50
    - gke-serial-release-1.3:
        description: Run [Serial], [Disruptive] tests on GKE on the release-1.3 branch.
        job-env: |
          export JENKINS_PUBLISHED_VERSION="ci/latest-1.3"
          export PROJECT="k8s-jkns-gke-serial-1-3"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Serial\]|\[Disruptive\] \
                                   --ginkgo.skip=\[Flaky\]|\[Feature:.+\]"
        timeout: 300
    - gke-slow-release-1.3:
        description: Run slow E2E tests on GKE using the release-1.3 branch.
        job-env: |
          export JENKINS_PUBLISHED_VERSION="ci/latest-1.3"
          export PROJECT="k8s-jkns-gke-slow-1-3"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Slow\] \
                                   --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
        timeout: 60
    - gke-reboot-release-1.3:
        description: Run [Feature:Reboot] tests on GKE on the release-1.3 branch.
        job-env: |
          export JENKINS_PUBLISHED_VERSION="ci/latest-1.3"
          export PROJECT="k8s-jkns-gke-reboot-1-3"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Reboot\]"
        timeout: 180
    jobs:
    - kubernetes-e2e-{gke-suffix}
    name: kubernetes-e2e-gke-1-3
    test-owner: Release owner
    trigger-job: kubernetes-build-1.3
- project:
    gke-suffix:
    - gke-release-1.2:
        description: Run E2E tests on GKE from the release-1.2 branch.
        job-env: |
          export JENKINS_PUBLISHED_VERSION="ci/latest-1.2"
          export PROJECT="k8s-jkns-e2e-gke-1-2"
          export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
        timeout: 50
    - gke-serial-release-1.2:
        description: Run [Serial], [Disruptive] tests on GKE on the release-1.2 branch.
        job-env: |
          export JENKINS_PUBLISHED_VERSION="ci/latest-1.2"
          export PROJECT="k8s-jkns-e2e-gke-serial-1-2"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Serial\]|\[Disruptive\] \
                                   --ginkgo.skip=\[Flaky\]|\[Feature:.+\]"
        timeout: 300
    - gke-slow-release-1.2:
        description: Run slow E2E tests on GKE using the release-1.2 branch.
        job-env: |
          export JENKINS_PUBLISHED_VERSION="ci/latest-1.2"
          export PROJECT="k8s-jkns-e2e-gke-slow-1-2"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Slow\] \
                                   --ginkgo.skip=\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
        timeout: 60
    - gke-ingress-release-1.2:
        description: Run [Feature:Ingress] tests on GKE on the release-1.2 branch.
        emails: beeps@google.com
        job-env: |
          export JENKINS_PUBLISHED_VERSION="ci/latest-1.2"
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Ingress\]"
          export PROJECT="kubernetes-gke-ingress-1-2"
          export FAIL_ON_GCP_RESOURCE_LEAK="false"  # TODO(spxtr): Enable after 1.2 in another projet
        test-owner: beeps
        timeout: 90
    jobs:
    - kubernetes-e2e-{gke-suffix}
    name: kubernetes-e2e-gke-1-2
    test-owner: Build Cop
    trigger-job: kubernetes-build-1.2
- project:
    gke-suffix:
    - gke-pre-release:
        description: Run E2E tests on GKE test endpoint against the latest prerelease
          (alpha/beta).
        job-env: |
          export PROJECT="k8s-jkns-e2e-gke-prerel"
          export CLOUDSDK_BUCKET="gs://cloud-sdk-testing/rc"
          export JENKINS_PUBLISHED_VERSION="release/latest"
        timeout: 480
    - gke-test:
        description: Run E2E tests on GKE test endpoint.
        job-env: |
          export PROJECT="k8s-jkns-e2e-gke-test"
          export CLOUDSDK_BUCKET="gs://cloud-sdk-testing/rc"
          export JENKINS_USE_SERVER_VERSION="y"
          export E2E_OPT="--check_version_skew=false"
        timeout: 480
    - gke-subnet:
        description: Run E2E tests on GKE test endpoint in a subnet.
        job-env: |
          # auto-subnet manually created - if deleted, it will need to be recreated
          # gcloud alpha compute networks create auto-subnet --mode auto
          export E2E_NAME="auto-subnet"
          export PROJECT="k8s-jkns-e2e-gke-subnet"
          export CLOUDSDK_BUCKET="gs://cloud-sdk-testing/rc"
          export JENKINS_USE_SERVER_VERSION="y"
          export E2E_OPT="--check_version_skew=false"
        timeout: 480
    - gke-staging:
        description: Run E2E tests on GKE staging endpoint.
        job-env: |
          export PROJECT="k8s-jkns-e2e-gke-staging"
          export CLOUDSDK_BUCKET="gs://cloud-sdk-testing/rc"
          export JENKINS_USE_SERVER_VERSION="y"
          export CLOUDSDK_API_ENDPOINT_OVERRIDES_CONTAINER="https://staging-container.sandbox.googleapis.com/"
          export E2E_OPT="--check_version_skew=false"
        timeout: 480
    - gke-staging-parallel:
        description: Run E2E tests on GKE staging endpoint in parallel.
        job-env: |
          export PROJECT="k8s-e2e-gke-staging-parallel"
          export CLOUDSDK_API_ENDPOINT_OVERRIDES_CONTAINER="https://staging-container.sandbox.googleapis.com/"
          export CLOUDSDK_BUCKET="gs://cloud-sdk-testing/rc"
          export JENKINS_USE_SERVER_VERSION="y"
          export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
          export E2E_OPT="--check_version_skew=false"
        timeout: 80
    - gke-prod:
        description: Run E2E tests on GKE prod endpoint.
        job-env: |
          export PROJECT="k8s-jkns-e2e-gke-prod"
          export CLOUDSDK_API_ENDPOINT_OVERRIDES_CONTAINER="https://container.googleapis.com/"
          export CLOUDSDK_BUCKET="gs://cloud-sdk-testing/rc"
          export JENKINS_USE_SERVER_VERSION="y"
          export ZONE="asia-east1-b"
          export E2E_OPT="--check_version_skew=false"
        timeout: 480
    - gke-prod-parallel:
        description: Run E2E tests on GKE prod endpoint in parallel.
        job-env: |
          export PROJECT="k8s-e2e-gke-prod-parallel"
          export CLOUDSDK_API_ENDPOINT_OVERRIDES_CONTAINER="https://container.googleapis.com/"
          export CLOUDSDK_BUCKET="gs://cloud-sdk-testing/rc"
          export JENKINS_USE_SERVER_VERSION="y"
          export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
          export ZONE="asia-east1-b"
          export E2E_OPT="--check_version_skew=false"
        timeout: 80
    jobs:
    - kubernetes-e2e-{gke-suffix}
    name: kubernetes-e2e-gke-version-pinned
    test-owner: GKE on-call
    trigger-job: kubernetes-build-1.2
- project:
    branch: release-1.1
    gke-suffix:
    - gke-1.1:
        cron-string: H */6 * * *
        description: Run E2E tests on GKE from the 1.1 release branch.
        timeout: 150
    jenkins_node: master
    job-env: ""
    jobs:
    - kubernetes-e2e-{gke-suffix}
    name: kubernetes-e2e-gke-1.1
    post-env: ""
    provider-env: ""
    runner: '{old-runner-1-1}'
    test-owner: Build Cop
    trigger-job: kubernetes-build-1.1
- project:
    gke-suffix:
    - gke-ingress:
        description: Run [Feature:Ingress] tests on GKE using the latest successful
          build.
        emails: beeps@google.com
        job-env: |
          export GINKGO_TEST_ARGS="--ginkgo.focus=\[Feature:Ingress\]"
          export PROJECT="kubernetes-gke-ingress"
          # TODO: Enable this when we've split 1.2 tests into another project.
          export FAIL_ON_GCP_RESOURCE_LEAK="false"
        test-owner: beeps
        timeout: 90
    jobs:
    - kubernetes-e2e-{gke-suffix}
    name: kubernetes-e2e-gke-features
    trigger-job: kubernetes-build
- project:
    emails: wonderfly@google.com,qzheng@google.com
    gke-suffix:
    - gke-trusty-test:
        description: Run E2E tests on GKE test endpoint.
        job-env: |
          export PROJECT="kubekins-e2e-gke-trusty-test"
          export CLOUDSDK_BUCKET="gs://cloud-sdk-testing/rc"
          export JENKINS_USE_SERVER_VERSION="y"
          export E2E_NAME="gke-e2e-test-trusty"
          export KUBE_OS_DISTRIBUTION="trusty"
          export E2E_OPT="--check_version_skew=false"
        timeout: 480
    - gke-trusty-subnet:
        description: Run E2E tests on GKE test endpoint in a subnet.
        job-env: |
          # Subnetwork "jkns-gke-e2e-subnet-trusty" is manually created -
          # if deleted, it will need to be recreated via
          # `gcloud alpha compute networks create jkns-gke-e2e-subnet-trusty --mode auto`
          export PROJECT="k8s-e2e-gke-trusty-subnet"
          export CLOUDSDK_BUCKET="gs://cloud-sdk-testing/rc"
          export JENKINS_USE_SERVER_VERSION="y"
          export E2E_NAME="gke-e2e-subnet-trusty"
          export KUBE_OS_DISTRIBUTION="trusty"
          export E2E_OPT="--check_version_skew=false"
        timeout: 480
    - gke-trusty-staging:
        description: Run E2E tests on GKE staging endpoint.
        job-env: |
          export PROJECT="e2e-gke-trusty-staging"
          export CLOUDSDK_API_ENDPOINT_OVERRIDES_CONTAINER="https://staging-container.sandbox.googleapis.com/"
          export CLOUDSDK_BUCKET="gs://cloud-sdk-testing/rc"
          export JENKINS_USE_SERVER_VERSION="y"
          export E2E_NAME="gke-e2e-staging-trusty"
          export KUBE_OS_DISTRIBUTION="trusty"
          export E2E_OPT="--check_version_skew=false"
        timeout: 480
    - gke-trusty-staging-parallel:
        description: Run E2E tests on GKE staging endpoint in parallel.
        job-env: |
          export PROJECT="e2e-gke-trusty-staging-p"
          export CLOUDSDK_API_ENDPOINT_OVERRIDES_CONTAINER="https://staging-container.sandbox.googleapis.com/"
          export CLOUDSDK_BUCKET="gs://cloud-sdk-testing/rc"
          export JENKINS_USE_SERVER_VERSION="y"
          export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
          export E2E_NAME="gke-e2e-staging-pa-trusty"
          export KUBE_OS_DISTRIBUTION="trusty"
          export E2E_OPT="--check_version_skew=false"
        timeout: 80
    - gke-trusty-prod:
        description: Run E2E tests on GKE prod endpoint.
        disable_job: true
        job-env: |
          export PROJECT="kubekins-e2e-gke-trusty-prod"
          export CLOUDSDK_API_ENDPOINT_OVERRIDES_CONTAINER="https://container.googleapis.com/"
          export CLOUDSDK_BUCKET="gs://cloud-sdk-testing/rc"
          export JENKINS_USE_SERVER_VERSION="y"
          export KUBE_GCE_ZONE="asia-east1-b"
          export E2E_NAME="gke-e2e-prod-trusty"
          export KUBE_OS_DISTRIBUTION="trusty"
          export E2E_OPT="--check_version_skew=false"
        timeout: 480
    - gke-trusty-prod-parallel:
        description: Run E2E tests on GKE prod endpoint in parallel.
        disable_job: true
        job-env: |
          export PROJECT="e2e-gke-trusty-prod-p"
          export CLOUDSDK_API_ENDPOINT_OVERRIDES_CONTAINER="https://container.googleapis.com/"
          export CLOUDSDK_BUCKET="gs://cloud-sdk-testing/rc"
          export JENKINS_USE_SERVER_VERSION="y"
          export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
          export GINKGO_PARALLEL="y"
          export KUBE_GCE_ZONE="asia-east1-b"
          export E2E_NAME="gke-e2e-prod-pa-trusty"
          export KUBE_OS_DISTRIBUTION="trusty"
          export E2E_OPT="--check_version_skew=false"
        timeout: 80
    jobs:
    - kubernetes-e2e-{gke-suffix}
    name: kubernetes-e2e-gke-trusty
    test-owner: wonderfly@google.com
    trigger-job: kubernetes-build-1.2
- job-group:
    emails: ihmccreery@google.com
    jobs:
    - kubernetes-e2e-{gke-suffix}:
        description: Deploys a cluster at v{version-old}, upgrades the master to v{version-new},
          and runs the v{version-old} tests.
        gke-suffix: '{provider}-{version-old}-{version-new}-upgrade-master'
        job-env: |
          export PROJECT="kube-gke-upg-{version-infix}-upg-mas"
          export JENKINS_PUBLISHED_VERSION="ci/latest-{version-old}"
          export E2E_UPGRADE_TEST="true"
          export JENKINS_PUBLISHED_SKEW_VERSION="ci/latest-{version-new}"
          export GINKGO_UPGRADE_TEST_ARGS="--ginkgo.focus=\[Feature:MasterUpgrade\] --upgrade-target=ci/latest-{version-new}"
          export E2E_OPT="--check_version_skew=false"
          # Set legacy skip list, only when testing old version
          # TODO remove when we no longer care about v1.1
          {legacy-ginkgo-test-args-env}
          {version-env}
        step: upgrade-master
        timeout: 600
    - kubernetes-e2e-{gke-suffix}:
        description: Deploys a cluster at v{version-old}, upgrades the cluster to
          v{version-new}, and runs the v{version-old} tests.
        gke-suffix: '{provider}-{version-old}-{version-new}-upgrade-cluster'
        job-env: |
          export PROJECT="kube-gke-upg-{version-infix}-upg-clu"
          export JENKINS_PUBLISHED_VERSION="ci/latest-{version-old}"
          export E2E_UPGRADE_TEST="true"
          export JENKINS_PUBLISHED_SKEW_VERSION="ci/latest-{version-new}"
          export GINKGO_UPGRADE_TEST_ARGS="--ginkgo.focus=\[Feature:ClusterUpgrade\] --upgrade-target=ci/latest-{version-new}"
          export E2E_OPT="--check_version_skew=false"
          # Set legacy skip list, only when testing old version
          # TODO remove when we no longer care about v1.1
          {legacy-ginkgo-test-args-env}
          {version-env}
        timeout: 600
    - kubernetes-e2e-{gke-suffix}:
        description: Deploys a cluster at v{version-old}, upgrades the cluster to
          v{version-new}, and runs the v{version-new} tests.
        gke-suffix: '{provider}-{version-old}-{version-new}-upgrade-cluster-new'
        job-env: |
          export PROJECT="kube-gke-upg-{version-infix}-upg-clu-n"
          export JENKINS_PUBLISHED_VERSION="ci/latest-{version-old}"
          export E2E_UPGRADE_TEST="true"
          export JENKINS_PUBLISHED_SKEW_VERSION="ci/latest-{version-new}"
          export GINKGO_UPGRADE_TEST_ARGS="--ginkgo.focus=\[Feature:ClusterUpgrade\] --upgrade-target=ci/latest-{version-new}"
          export JENKINS_USE_SKEW_TESTS="true"
          export E2E_OPT="--check_version_skew=false"
          {version-env}
        timeout: 600
    name: kubernetes-e2e-{provider}-{version-old}-{version-new}
    test-owner: ihmccreery
    trigger-job: kubernetes-build
- project:
    jobs:
    - kubernetes-e2e-{provider}-{version-old}-{version-new}:
        legacy-ginkgo-test-args-env: |
          # XXX This is a hack to run only the tests we care about, without importing all of
          # the skip list vars from the v1.0 e2e.sh.
          export GINKGO_TEST_ARGS="--ginkgo.skip=Skipped|Restart\sshould\srestart\sall\snodes|Example|Reboot|ServiceLoadBalancer|DaemonRestart\sController\sManager|Daemon\sset\sshould\srun\sand\sstop\scomplex\sdaemon|Resource\susage\sof\ssystem\scontainers|allows\sscheduling\sof\spods\son\sa\sminion\safter\sit\srejoins\sthe\scluster"
        version-env: |
          # In v1.1 and below, NUM_MINIONS defaults to 2, so we have to override to 3 here.  NUM_MINIONS
          # was changed to NUM_NODES in v1.2, but we don't need to override for v1.2 and above.
          export NUM_MINIONS=3
          # Similarly, in v1.1 and below, MACHINE_TYPE defaults to 'n1-standard-1', so we need to
          # override it here (specifically for HPA tests).
          export MACHINE_TYPE='n1-standard-2'
        version-infix: 1-0-1-2
        version-new: "1.2"
        version-old: "1.0"
    - kubernetes-e2e-{provider}-{version-old}-{version-new}:
        legacy-ginkgo-test-args-env: |
          # XXX This is a hack to run only the tests we care about, without importing all of
          # the skip list vars from the v1.1 e2e.sh.
          export GINKGO_TEST_ARGS="--ginkgo.skip=Autoscaling\sSuite|resource\susage\stracking|Nodes|Etcd\sFailure|MasterCerts|experimental\sresource\susage\stracking|ServiceLoadBalancer|Shell|Daemon\sset|Deployment|Skipped|Restart\sshould\srestart\sall\snodes|Example|Reboot|ServiceLoadBalancer|DaemonRestart\sController\sManager|Daemon\sset\sshould\srun\sand\sstop\scomplex\sdaemon|Resource\susage\sof\ssystem\scontainers|allows\sscheduling\sof\spods\son\sa\sminion\safter\sit\srejoins\sthe\scluster"
        version-env: |
          # In v1.1 and below, NUM_MINIONS defaults to 2, so we have to override to 3 here.  NUM_MINIONS
          # was changed to NUM_NODES in v1.2, but we don't need to override for v1.2 and above.
          export NUM_MINIONS=3
          # Similarly, in v1.1 and below, MACHINE_TYPE defaults to 'n1-standard-1', so we need to
          # override it here (specifically for HPA tests).
          export MACHINE_TYPE='n1-standard-2'
        version-infix: 1-1-1-2
        version-new: "1.2"
        version-old: "1.1"
    - kubernetes-e2e-{provider}-{version-old}-{version-new}:
        legacy-ginkgo-test-args-env: |
          # XXX This is a hack to run only the tests we care about, without importing all of
          # the skip list vars from the v1.1 e2e.sh.
          export GINKGO_TEST_ARGS="--ginkgo.skip=Autoscaling\sSuite|resource\susage\stracking|Nodes|Etcd\sFailure|MasterCerts|experimental\sresource\susage\stracking|ServiceLoadBalancer|Shell|Daemon\sset|Deployment|Skipped|Restart\sshould\srestart\sall\snodes|Example|Reboot|ServiceLoadBalancer|DaemonRestart\sController\sManager|Daemon\sset\sshould\srun\sand\sstop\scomplex\sdaemon|Resource\susage\sof\ssystem\scontainers|allows\sscheduling\sof\spods\son\sa\sminion\safter\sit\srejoins\sthe\scluster"
        version-env: |
          # In v1.1 and below, NUM_MINIONS defaults to 2, so we have to override to 3 here.  NUM_MINIONS
          # was changed to NUM_NODES in v1.2, but we don't need to override for v1.2 and above.
          export NUM_MINIONS=3
          # Similarly, in v1.1 and below, MACHINE_TYPE defaults to 'n1-standard-1', so we need to
          # override it here (specifically for HPA tests).
          export MACHINE_TYPE='n1-standard-2'
        version-infix: 1-1-1-3
        version-new: "1.3"
        version-old: "1.1"
    - kubernetes-e2e-{provider}-{version-old}-{version-new}:
        legacy-ginkgo-test-args-env: ""
        version-env: ""
        version-infix: 1-2-1-3
        version-new: "1.3"
        version-old: "1.2"
    name: kubernetes-e2e-upgrades-gke
    provider: gke
- job-group:
    emails: ihmccreery@google.com
    jobs:
    - kubernetes-e2e-{gke-suffix}:
        description: Deploys a cluster at v{version-cluster} and runs the Kubectl
          tests with v{version-client} kubectl.
        gke-suffix: '{provider}-{version-cluster}-{version-client}-kubectl-skew'
        job-env: |
          export PROJECT="kube-gke-upg-{version-infix}-ctl-skew"
          export JENKINS_PUBLISHED_VERSION="ci/latest-{version-cluster}"
          export GINKGO_TEST_ARGS="--ginkgo.focus=Kubectl"
          export JENKINS_PUBLISHED_SKEW_VERSION="ci/latest-{version-client}"
          export GINKGO_PARALLEL="y"
          export E2E_OPT="--check_version_skew=false"
        timeout: 120
    name: kubernetes-e2e-{provider}-{version-cluster}-{version-client}-kubectl-skew
    test-owner: ihmccreery
    trigger-job: kubernetes-build
- project:
    jobs:
    - kubernetes-e2e-{provider}-{version-cluster}-{version-client}-kubectl-skew:
        version-client: "1.1"
        version-cluster: "1.2"
        version-infix: 1-2-1-1
    - kubernetes-e2e-{provider}-{version-cluster}-{version-client}-kubectl-skew:
        version-client: "1.3"
        version-cluster: "1.2"
        version-infix: 1-2-1-3
    - kubernetes-e2e-{provider}-{version-cluster}-{version-client}-kubectl-skew:
        version-client: "1.2"
        version-cluster: "1.3"
        version-infix: 1-3-1-2
    name: kubernetes-e2e-kubectl-skew-gke
    provider: gke

