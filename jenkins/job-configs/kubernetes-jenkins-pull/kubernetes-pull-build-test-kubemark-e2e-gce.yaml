- job:
    name: 'kubernetes-pull-build-test-kubemark-e2e-gce'
    concurrent: true
    properties:
        - build-discarder:
            days-to-keep: 7
        - github:
            url: 'https://github.com/kubernetes/kubernetes'
        - throttle:
            max-total: 12
            max-per-node: 1
            option: project
        - raw:
            xml: |
                <com.cloudbees.plugins.JobPrerequisites plugin="slave-prerequisites@1.0">
                    <script>docker version; gcloud version</script>
                    <interpreter>shell script</interpreter>
                </com.cloudbees.plugins.JobPrerequisites>
    parameters:
        - string:
            name: ghprbPullId
        - string:
            name: ghprbTargetBranch
        # The test job tracks a run through the queue using the buildId parameter.
        - string:
            name: buildId
    scm:
        - git:
            remotes:
                - remote:
                    url: 'https://github.com/kubernetes/kubernetes'
                    refspec: '+refs/heads/*:refs/remotes/upstream/*'
                - remote:
                    url: 'https://github.com/kubernetes/kubernetes'
                    refspec: '+refs/pull/${ghprbPullId}/merge:refs/remotes/origin/pr/${ghprbPullId}/merge'
            branches:
                - 'origin/pr/${ghprbPullId}/merge'
            browser: githubweb
            browser-url: 'https://github.com/kubernetes/kubernetes'
            timeout: 20
            clean:
                after: true
            wipe-workspace: false
            skip-tag: true
    wrappers:
        - e2e-credentials-binding
        - inject:
            properties-content: |
                GOROOT=/usr/local/go
                GOPATH=$WORKSPACE/go
                PATH=$PATH:$GOROOT/bin:$WORKSPACE/go/bin
        - workspace-cleanup:
            dirmatch: true
            exclude: ['.git/']
            external-deletion-command: 'sudo rm -rf %s'
        - timeout:
            timeout: 600
            fail: true
        - ansicolor:
            colormap: xterm
    builders:
        - activate-gce-service-account
        - ensure-upload-to-gcs-script:
            git-basedir: ''
        - shell: JENKINS_BUILD_STARTED=true "${WORKSPACE}/_tmp/upload-to-gcs.sh"
        # TODO: Pull this mess out of the YAML.
        - shell: |
            export KUBE_SKIP_PUSH_GCS=y
            export KUBE_RUN_FROM_OUTPUT=y
            export KUBE_FASTBUILD=true
            ./hack/jenkins/build.sh

            # Nothing should want Jenkins $HOME
            export HOME=${WORKSPACE}

            export KUBERNETES_PROVIDER="gce"
            # Having full "kubemark" in name will result in exceeding allowed length
            # of firewall-rule name.
            export E2E_NAME="k6k-e2e-${NODE_NAME}-${EXECUTOR_NUMBER}"
            export PROJECT="k8s-jkns-pr-kubemark"
            export E2E_UP="true"
            export E2E_TEST="false"
            export E2E_DOWN="true"
            export USE_KUBEMARK="true"
            export KUBEMARK_TESTS="starting\s30\spods\sper\snode"
            export FAIL_ON_GCP_RESOURCE_LEAK="false"
            # Override defaults to be independent from GCE defaults and set kubemark parameters
            export NUM_NODES="1"
            export MASTER_SIZE="n1-standard-1"
            export NODE_SIZE="n1-standard-2"
            export KUBE_GCE_ZONE="us-central1-f"
            export KUBEMARK_MASTER_SIZE="n1-standard-1"
            export KUBEMARK_NUM_NODES="5"
            # The kubemark scripts build a Docker image
            export JENKINS_ENABLE_DOCKER_IN_DOCKER="y"

            # GCE variables
            export INSTANCE_PREFIX=${E2E_NAME}
            export KUBE_GCE_NETWORK=${E2E_NAME}
            export KUBE_GCE_INSTANCE_PREFIX=${E2E_NAME}

            # Force to use container-vm.
            export KUBE_NODE_OS_DISTRIBUTION="debian"
            # Skip gcloud update checking
            export CLOUDSDK_COMPONENT_MANAGER_DISABLE_UPDATE_CHECK=true

            # Get golang into our PATH so we can run e2e.go
            export PATH=${PATH}:/usr/local/go/bin

            timeout -k 15m 55m bash <(curl -fsS --retry 3  "https://raw.githubusercontent.com/kubernetes/test-infra/master/jenkins/dockerized-e2e-runner.sh") && rc=$? || rc=$?
            if [[ ${rc} -ne 0 ]]; then
              if [[ -x cluster/log-dump.sh && -d _artifacts ]]; then
                echo "Dumping logs for any remaining nodes"
                ./cluster/log-dump.sh _artifacts
              fi
            fi
            if [[ ${rc} -eq 124 || ${rc} -eq 137 ]]; then
              echo "Build timed out" >&2
            elif [[ ${rc} -ne 0 ]]; then
              echo "Build failed" >&2
            fi
            echo "Exiting with code: ${rc}"
            exit ${rc}
    publishers:
        - xunit:
            thresholds:
                - failed:
                    unstable:
                    unstablenew:
                    failure:
                    failurenew:
                - skipped:
                    unstable:
                    unstablenew:
                    failure:
                    failurenew:
            types:
                - junit:
                    skip-if-no-test-files: false
                    pattern: '_artifacts/**.xml'
                    deleteoutput: false
        - gcs-uploader:
            git-basedir: ''
