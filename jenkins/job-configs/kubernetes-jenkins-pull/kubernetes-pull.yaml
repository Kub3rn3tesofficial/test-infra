- job-template:
    name: 'kubernetes-pull-{suffix}'
    concurrent: true
    properties:
        - build-discarder:
            days-to-keep: 7
        - github:
            url: https://github.com/kubernetes/kubernetes
        - throttle:
            max-total: '{max-total}'
            max-per-node: 2
            option: project
        - raw:
            xml: |
                <com.cloudbees.plugins.JobPrerequisites plugin="slave-prerequisites@1.0">
                    <script>docker version; gcloud version</script>
                    <interpreter>shell script</interpreter>
                </com.cloudbees.plugins.JobPrerequisites>
    parameters:
        - string:
            name: sha1
            description: 'sha1 or refname (e.g. origin/pr/N/head) to build'
    scm:
        - git:
            remotes:
                - remote:
                    url: https://github.com/kubernetes/kubernetes
                    refspec: '+refs/heads/*:refs/remotes/upstream/*'
                - remote:
                    url: https://github.com/kubernetes/kubernetes
                    refspec: '+refs/pull/${{ghprbPullId}}/merge:refs/remotes/origin/pr/${{ghprbPullId}}/merge'
            branches:
                - 'origin/pr/${{ghprbPullId}}/merge'
            browser: githubweb
            browser-url: http://github.com/kubernetes/kubernetes
            timeout: 20
            clean:
                after: true
            wipe-workspace: false
            skip-tag: true
    triggers:
        - github-pull-request:
            # This is the Jenkins GHPRB plugin ID, not the actual github token.
            auth-id: 'f8e31bc1-9abb-460a-a2ca-9c4aae3ca4e8'
            trigger-phrase: '(?is).*@k8s-bot\s+{trigger-phrase}\s+this.*'
            cron: 'H/2 * * * *'
            status-context: Jenkins {status-context}
            status-url: 'https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/${{ghprbPullId}}/${{JOB_NAME}}/${{BUILD_NUMBER}}/'
            status-add-test-results: '{status-add-test-results}'
            # This should roughly line up with kubernetes-maintainers.
            admin-list:
                - a-robinson
                - alex-mohr
                - amygdala
                - aronchick
                - ArtfulCoder
                - bgrant0607
                - bgrant0607-nocc
                - bprashanth
                - brendandburns
                - caesarxuchao
                - childsb
                - cjcullen
                - david-mcmahon
                - davidopp
                - dchen1107
                - deads2k
                - derekwaynecarr
                - eparis
                - erictune
                - fabioy
                - fejta
                - fgrzadkowski
                - freehan
                - ghodss
                - gmarek
                - goltermann
                - hurf
                - ihmccreery
                - ixdy
                - jackgr
                - janetkuo
                - jbeda
                - jdef
                - jlowdermilk
                - jsafrane
                - jszczepkowski
                - justinsb
                - k8s-merge-robot
                - karlkfi
                - kelseyhightower
                - kevin-wangzefeng
                - krousey
                - lavalamp
                - liggitt
                - luxas
                - madhusudancs
                - maisem
                - mansoorj
                - mikedanese
                - MikeJeffrey
                - mml
                - mwielgus
                - ncdc
                - nikhiljindal
                - piosz
                - pmorie
                - pwittrock
                - Q-Lee
                - quinton-hoole
                - Random-Liu
                - rjnagal
                - rmmh
                - roberthbailey
                - saad-ali
                - sarahnovotny
                - satnam6502
                - smarterclayton
                - spxtr
                - sttts
                - swagiaal
                - thockin
                - timothysc
                - timstclair
                - vishh
                - vmarmol
                - wojtek-t
                - xiang90
                - yifan-gu
                - yujuhong
                - zmerlynn
            # This should roughly line up with kubernetes-contributors.
            white-list:
                - abhgupta
                - AdoHe
                - AnanyaKumar
                - andronat
                - andyzheng0831
                - apeeyush
                - aronchick
                - aveshagarwal
                - bcbroussard
                - BenTheElder
                - burmanm
                - caseydavenport
                - chrisleck
                - csrwng
                - dalanlan
                - deads2k
                - ericchiang
                - feihujiang
                - gouyang
                - HaiyangDING
                - huangyuqi
                - imkin
                - jackgr
                - jayunit100
                - jiangyaoguo
                - jimmidyson
                - kargakis
                - luxas
                - matthewdupre
                - mfojtik
                - mikeln
                - mqliang
                - ncdc
                - pweil-
                - resouer
                - s-urbaniak
                - sdminonne
                - socaa
                - soltysh
                - spothanis
                - stefwalter
                - timstclair
                - therc
                - uluyol
                - uruddarraju
                - wonderfly
                - yifan-gu
                - zhengguoyong
            org-list:
                - kubernetes
            white-list-target-branches:
                - master
                - release-.*
            success-comment: '{success-comment}'
            failure-comment: '{failure-comment}'
            error-comment: '{error-comment}'
    wrappers:
        - workspace-cleanup:
            dirmatch: true
            external-deletion-command: 'sudo rm -rf %s'
        - timeout:
            timeout: 80
            fail: true
        - ansicolor:
            colormap: xterm
    builders:
        - ensure-upload-to-gcs-script
        - shell: JENKINS_BUILD_STARTED=true "${{WORKSPACE}}/_tmp/upload-to-gcs.sh"
        - shell: '{cmd}'
    publishers:
        - gcs-uploader

- project:
    name: kubernetes-pull
    suffix:
      - test-unit-integration: # kubernetes-pull-test-unit-integration
          status-context: unit/integration
          max-total: 0 # Unlimited
          skip-if-no-test-files: false  # We expect JUnit output from this job.
          status-add-test-results: true
          success-comment: ''
          failure-comment: ''
          error-comment: ''
          trigger-phrase: 'unit\s+test'
          cmd: |
            export KUBE_VERIFY_GIT_BRANCH="${{ghprbTargetBranch}}"
            ./hack/jenkins/gotest-dockerized.sh
      - verify-all: # kubernetes-pull-verify-all
          status-context: verification
          max-total: 0 # Unlimited
          skip-if-no-test-files: true  # We do not expect JUnit output from this job.
          status-add-test-results: false
          success-comment: ''
          failure-comment: ''
          error-comment: ''
          trigger-phrase: 'verify'
          cmd: |
            export KUBE_VERIFY_GIT_BRANCH="${{ghprbTargetBranch}}"
            export KUBE_TEST_SCRIPT="./hack/jenkins/verify-dockerized.sh"
            ./hack/jenkins/gotest-dockerized.sh
      - build-test-e2e-gke: # kubernetes-pull-build-test-e2e-gke
          status-context: GKE smoke e2e
          max-total: 12
          skip-if-no-test-files: false  # We expect JUnit output from this job.
          status-add-test-results: true
          success-comment: ''
          failure-comment: ''
          error-comment: ''
          trigger-phrase: 'e2e\s+test'
          cmd: |
            export KUBE_SKIP_PUSH_GCS=y
            export KUBE_RUN_FROM_OUTPUT=y
            export KUBE_FASTBUILD=true
            ./hack/jenkins/build.sh
            if [[ "${{ghprbTargetBranch:-}}" == "master" || "${{ghprbTargetBranch:-}}" == "release-1.2" || "${{ghprbTargetBranch:-}}" == "release-1.3" ]]; then
              # Nothing should want Jenkins $HOME
              export HOME=${{WORKSPACE}}

              export KUBERNETES_PROVIDER="gke"
              export E2E_MIN_STARTUP_PODS="1"
              export FAIL_ON_GCP_RESOURCE_LEAK="true"

              # Experimental flake detection-- harmlessly does nothing until
              # ginkgo changes get made, but allows for testing them in a PR.
              export GINKGO_TOLERATE_FLAKES="y"

              export E2E_NAME="e2e-gke-${{NODE_NAME}}-${{EXECUTOR_NUMBER}}"
              export GINKGO_PARALLEL="y"
              # Just run a smoke test.
              export GINKGO_TEST_ARGS="--ginkgo.focus=Guestbook"
              export FAIL_ON_GCP_RESOURCE_LEAK="false"
              export PROJECT="k8s-jkns-pr-gke"
              # Since we're only running one test, just use two nodes.
              export NUM_NODES="2"

              # Assume we're upping, testing, and downing a cluster
              export E2E_UP="true"
              export E2E_TEST="true"
              export E2E_DOWN="true"
              export E2E_OPT="--check_version_skew=false"

              # Skip gcloud update checking
              export CLOUDSDK_COMPONENT_MANAGER_DISABLE_UPDATE_CHECK=true

              # GKE variables
              export CLUSTER_NAME=${{E2E_NAME}}
              export KUBE_GKE_NETWORK=${{E2E_NAME}}
              export ZONE="us-central1-f"

              # Get golang into our PATH so we can run e2e.go
              export PATH=${{PATH}}:/usr/local/go/bin

              timeout -k 15m 55m ./hack/jenkins/e2e-runner.sh && rc=$? || rc=$?
              if [[ ${{rc}} -ne 0 ]]; then
                if [[ -x cluster/log-dump.sh && -d _artifacts ]]; then
                  echo "Dumping logs for any remaining nodes"
                  ./cluster/log-dump.sh _artifacts
                fi
              fi
              if [[ ${{rc}} -eq 124 || ${{rc}} -eq 137 ]]; then
                echo "Build timed out" >&2
              elif [[ ${{rc}} -ne 0 ]]; then
                echo "Build failed" >&2
              fi
              echo "Exiting with code: ${{rc}}"
              exit ${{rc}}
            else
              echo "PR GKE job disabled for legacy branches."
            fi

      - build-test-e2e-gce: # kubernetes-pull-build-test-e2e-gce
          status-context: GCE e2e
          max-total: 12
          skip-if-no-test-files: false  # We expect JUnit output from this job.
          status-add-test-results: true
          success-comment: |
            GCE e2e build/test **passed** for commit ${{ghprbActualCommit}}.
            * [Test Results](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/${{ghprbPullId}}/${{JOB_NAME}}/${{BUILD_NUMBER}})
            * [Build Log](http://pr-test.k8s.io/${{ghprbPullId}}/${{JOB_NAME}}/${{BUILD_NUMBER}}/build-log.txt)
            * [Test Artifacts](https://console.developers.google.com/storage/browser/kubernetes-jenkins/pr-logs/pull/${{ghprbPullId}}/${{JOB_NAME}}/${{BUILD_NUMBER}}/artifacts/)
            * [Internal Jenkins Results](${{JOB_URL}}/${{BUILD_NUMBER}})
          failure-comment: |
            GCE e2e build/test **failed** for commit ${{ghprbActualCommit}}.
            * [Test Results](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/${{ghprbPullId}}/${{JOB_NAME}}/${{BUILD_NUMBER}})
            * [Build Log](http://pr-test.k8s.io/${{ghprbPullId}}/${{JOB_NAME}}/${{BUILD_NUMBER}}/build-log.txt)
            * [Test Artifacts](https://console.developers.google.com/storage/browser/kubernetes-jenkins/pr-logs/pull/${{ghprbPullId}}/${{JOB_NAME}}/${{BUILD_NUMBER}}/artifacts/)
            * [Internal Jenkins Results](${{JOB_URL}}/${{BUILD_NUMBER}})

            Please reference the [list of currently known flakes](https://github.com/kubernetes/kubernetes/issues?q=is:issue+label:kind/flake+is:open) when examining this failure. If you request a re-test, you must reference the issue describing the flake.
          error-comment: |
            GCE e2e build/test **errored** for commit ${{ghprbActualCommit}}.
            * [Test Results](https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/pr-logs/pull/${{ghprbPullId}}/${{JOB_NAME}}/${{BUILD_NUMBER}})
            * [Build Log](http://pr-test.k8s.io/${{ghprbPullId}}/${{JOB_NAME}}/${{BUILD_NUMBER}}/build-log.txt)
            * [Test Artifacts](https://console.developers.google.com/storage/browser/kubernetes-jenkins/pr-logs/pull/${{ghprbPullId}}/${{JOB_NAME}}/${{BUILD_NUMBER}}/artifacts/)
            * [Internal Jenkins Results](${{JOB_URL}}/${{BUILD_NUMBER}})

            Please reference the [list of currently known flakes](https://github.com/kubernetes/kubernetes/issues?q=is:issue+label:kind/flake+is:open) when examining this failure. If you request a re-test, you must reference the issue describing the flake.
          trigger-phrase: 'e2e\s+test'
          cmd: |
            export KUBE_SKIP_PUSH_GCS=y
            export KUBE_RUN_FROM_OUTPUT=y
            export KUBE_FASTBUILD=true
            ./hack/jenkins/build.sh
            if [[ "${{ghprbTargetBranch:-}}" == "master" || "${{ghprbTargetBranch:-}}" == "release-1.2" || "${{ghprbTargetBranch:-}}" == "release-1.3" ]]; then
              # Nothing should want Jenkins $HOME
              export HOME=${{WORKSPACE}}

              export KUBERNETES_PROVIDER="gce"
              export E2E_MIN_STARTUP_PODS="1"
              export KUBE_GCE_ZONE="us-central1-f"
              export FAIL_ON_GCP_RESOURCE_LEAK="true"

              # Experimental flake detection-- harmlessly does nothing until
              # ginkgo changes get made, but allows for testing them in a PR.
              export GINKGO_TOLERATE_FLAKES="y"

              export E2E_NAME="e2e-gce-${{NODE_NAME}}-${{EXECUTOR_NUMBER}}"
              export GINKGO_PARALLEL="y"
              # This list should match the list in kubernetes-e2e-gce.
              export GINKGO_TEST_ARGS="--ginkgo.skip=\[Slow\]|\[Serial\]|\[Disruptive\]|\[Flaky\]|\[Feature:.+\]"
              export FAIL_ON_GCP_RESOURCE_LEAK="false"
              export PROJECT="k8s-jkns-pr-gce"
              # NUM_NODES should match kubernetes-e2e-gce.
              export NUM_NODES="3"

              # Assume we're upping, testing, and downing a cluster
              export E2E_UP="true"
              export E2E_TEST="true"
              export E2E_DOWN="true"

              # Skip gcloud update checking
              export CLOUDSDK_COMPONENT_MANAGER_DISABLE_UPDATE_CHECK=true

              # GCE variables
              export INSTANCE_PREFIX=${{E2E_NAME}}
              export KUBE_GCE_NETWORK=${{E2E_NAME}}
              export KUBE_GCE_INSTANCE_PREFIX=${{E2E_NAME}}
              export GCE_SERVICE_ACCOUNT=$(gcloud auth list 2> /dev/null | grep active | cut -f3 -d' ')

              # Get golang into our PATH so we can run e2e.go
              export PATH=${{PATH}}:/usr/local/go/bin

              timeout -k 15m 55m ./hack/jenkins/e2e-runner.sh && rc=$? || rc=$?
              if [[ ${{rc}} -ne 0 ]]; then
                if [[ -x cluster/log-dump.sh && -d _artifacts ]]; then
                  echo "Dumping logs for any remaining nodes"
                  ./cluster/log-dump.sh _artifacts
                fi
              fi
              if [[ ${{rc}} -eq 124 || ${{rc}} -eq 137 ]]; then
                echo "Build timed out" >&2
              elif [[ ${{rc}} -ne 0 ]]; then
                echo "Build failed" >&2
              fi
              echo "Exiting with code: ${{rc}}"
              exit ${{rc}}
            else
              ./hack/jenkins/e2e.sh
            fi
    jobs:
        - 'kubernetes-pull-{suffix}'
