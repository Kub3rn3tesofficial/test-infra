# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file creates a build environment for building and running kubernetes
# unit and integration tests

FROM gcr.io/k8s-testimages/bazelbuild:0.11

# Defaults of all e2e runs
ENV E2E_UP=true \
    E2E_TEST=true \
    E2E_DOWN=true

# Customize these as appropriate
ENV E2E_PUBLISH_PATH= \
    INSTANCE_PREFIX=jenkins-e2e \
    KUBERNETES_PROVIDER=gce

# Variables specific to GCP
ENV FAIL_ON_GCP_RESOURCE_LEAK=true \
    JOB_NAME=kubernetes-e2e-gce-conformance \
    KUBE_GCE_INSTANCE_PREFIX=jenkins-e2e \
    KUBE_GCE_NETWORK=jenkins-e2e \
    KUBE_GCE_ZONE=us-central1-f

# Variable specific to the machine:
# GOOGLE_APPLICATION_CREDENTIALS
# JENKINS_GCE_SSH_PRIVATE_KEY_FILE
# JENKINS_GCE_SSH_PUBLIC_KEY_FILE
# JENKINS_AWS_SSH_PRIVATE_KEY_FILE
# JENKINS_AWS_SSH_PUBLIC_KEY_FILE
# JENKINS_AWS_CREDENTIALS_FILE

# Setup workspace and symlink to gopath
# TODO: do we still need the symlink?
RUN mkdir -p /go/src/k8s.io/kubernetes /workspace \
    && ln -s /go/src/k8s.io/kubernetes /workspace/kubernetes
ENV WORKSPACE=/workspace

# Install a few necessary linux packages that came with kubekins-test but not bazelbuild:
# dnsutils is needed by federation cluster scripts.
# python-pip is needed to install the AWS cli.
RUN apt-get -o Acquire::Check-Valid-Until=false update && apt-get install -y \
	dnsutils \
	python-pip \
	--no-install-recommends \
	&& rm -rf /var/lib/apt/lists/*

# bazelbuild already has gcloud installed, but we need optional components too.
RUN gcloud -q components update && \
    gcloud -q components install alpha beta kubectl && \
    gcloud info | tee /workspace/gcloud-info.txt

ADD ["e2e-runner.sh", \
    "kops-e2e-runner.sh", \
    "kubetest", \
    "https://raw.githubusercontent.com/kubernetes/kubernetes/master/cluster/get-kube.sh", \
    "/workspace/"]
RUN ["chmod", "+x", "/workspace/get-kube.sh"]
WORKDIR "/workspace"

ENTRYPOINT ["/workspace/e2e-runner.sh"]
